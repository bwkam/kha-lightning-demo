// Generated by Haxe 4.3.0+fa3f709
#ifndef INCLUDED_Camera
#define INCLUDED_Camera

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Camera)
HX_DECLARE_CLASS2(kha,math,FastMatrix4)
HX_DECLARE_CLASS2(kha,math,FastVector3)



class HXCPP_CLASS_ATTRIBUTES Camera_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Camera_obj OBJ_;
		Camera_obj();

	public:
		enum { _hx_ClassId = 0x4d6b7d85 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Camera")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Camera"); }

		inline static ::hx::ObjectPtr< Camera_obj > __new() {
			::hx::ObjectPtr< Camera_obj > __this = new Camera_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Camera_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Camera_obj *__this = (Camera_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Camera_obj), false, "Camera"));
			*(void **)__this = Camera_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Camera_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Camera",c5,ba,20,ec); }

		static void __boot();
		static  ::kha::math::FastVector3 position;
		static Float horizontalAngle;
		static Float verticalAngle;
		static bool moveForward;
		static bool moveBackward;
		static bool strafeLeft;
		static bool strafeRight;
		static bool isMouseDown;
		static Float lastTime;
		static Float mouseX;
		static Float mouseY;
		static Float mouseDeltaX;
		static Float mouseDeltaY;
		static Float speed;
		static Float mouseSpeed;
		static  ::kha::math::FastMatrix4 view;
		static  ::kha::math::FastVector3 look;
		static void update();
		static ::Dynamic update_dyn();

		static void onMouseDown(int button,int x,int y);
		static ::Dynamic onMouseDown_dyn();

		static void onMouseUp(int button,int x,int y);
		static ::Dynamic onMouseUp_dyn();

		static void onMouseMove(int x,int y,int movementX,int movementY);
		static ::Dynamic onMouseMove_dyn();

		static void onKeyDown(int key);
		static ::Dynamic onKeyDown_dyn();

		static void onKeyUp(int key);
		static ::Dynamic onKeyUp_dyn();

};


#endif /* INCLUDED_Camera */ 
