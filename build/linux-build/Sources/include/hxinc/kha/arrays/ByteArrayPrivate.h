// Generated by Haxe 4.3.0+fa3f709
#ifndef INCLUDED_kha_arrays_ByteArrayPrivate
#define INCLUDED_kha_arrays_ByteArrayPrivate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_3fe8139d5204232b
#define INCLUDED_3fe8139d5204232b
#include "cpp_bytearray.h"
#endif
HX_DECLARE_CLASS2(kha,arrays,ByteArrayPrivate)

namespace kha{
namespace arrays{


class HXCPP_CLASS_ATTRIBUTES ByteArrayPrivate_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ByteArrayPrivate_obj OBJ_;
		ByteArrayPrivate_obj();

	public:
		enum { _hx_ClassId = 0x41c982d0 };

		void __construct(int offset,int length);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.arrays.ByteArrayPrivate")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.arrays.ByteArrayPrivate"); }
		static ::hx::ObjectPtr< ByteArrayPrivate_obj > __new(int offset,int length);
		static ::hx::ObjectPtr< ByteArrayPrivate_obj > __alloc(::hx::Ctx *_hx_ctx,int offset,int length);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ByteArrayPrivate_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ByteArrayPrivate",b2,6f,b5,83); }

		static void finalize( ::kha::arrays::ByteArrayPrivate arr);
		static ::Dynamic finalize_dyn();

		 bytearray self;
		int byteArrayOffset;
		int byteArrayLength;
};

} // end namespace kha
} // end namespace arrays

#endif /* INCLUDED_kha_arrays_ByteArrayPrivate */ 
