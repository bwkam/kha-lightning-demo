// Generated by Haxe 4.3.0+fa3f709
#ifndef INCLUDED_Scene
#define INCLUDED_Scene

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Scene)
HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Framebuffer)
HX_DECLARE_CLASS2(kha,math,FastMatrix4)
HX_DECLARE_CLASS1(pipelines,LightCubePipeline)
HX_DECLARE_CLASS1(pipelines,TextureCubePipeline)
HX_DECLARE_CLASS1(zui,Handle)
HX_DECLARE_CLASS1(zui,Zui)



class HXCPP_CLASS_ATTRIBUTES Scene_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Scene_obj OBJ_;
		Scene_obj();

	public:
		enum { _hx_ClassId = 0x0043b288 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Scene")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Scene"); }
		static ::hx::ObjectPtr< Scene_obj > __new();
		static ::hx::ObjectPtr< Scene_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Scene_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Scene",2c,49,ff,0b); }

		 ::pipelines::TextureCubePipeline cube;
		inline  ::pipelines::TextureCubePipeline _hx_set_cube(::hx::StackContext *_hx_ctx, ::pipelines::TextureCubePipeline _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return cube=_hx_v; }
		 ::pipelines::LightCubePipeline lightCube;
		inline  ::pipelines::LightCubePipeline _hx_set_lightCube(::hx::StackContext *_hx_ctx, ::pipelines::LightCubePipeline _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return lightCube=_hx_v; }
		 ::kha::math::FastMatrix4 proj;
		inline  ::kha::math::FastMatrix4 _hx_set_proj(::hx::StackContext *_hx_ctx, ::kha::math::FastMatrix4 _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return proj=_hx_v; }
		::Array< ::Dynamic> cubePositions;
		inline ::Array< ::Dynamic> _hx_set_cubePositions(::hx::StackContext *_hx_ctx,::Array< ::Dynamic> _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return cubePositions=_hx_v; }
		::Array< ::Dynamic> pointLightPositions;
		inline ::Array< ::Dynamic> _hx_set_pointLightPositions(::hx::StackContext *_hx_ctx,::Array< ::Dynamic> _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightPositions=_hx_v; }
		 ::zui::Zui ui;
		inline  ::zui::Zui _hx_set_ui(::hx::StackContext *_hx_ctx, ::zui::Zui _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return ui=_hx_v; }
		 ::zui::Handle dirLightAmbient;
		inline  ::zui::Handle _hx_set_dirLightAmbient(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightAmbient=_hx_v; }
		 ::zui::Handle dirLightDiffuse;
		inline  ::zui::Handle _hx_set_dirLightDiffuse(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightDiffuse=_hx_v; }
		 ::zui::Handle dirLightSpecular;
		inline  ::zui::Handle _hx_set_dirLightSpecular(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightSpecular=_hx_v; }
		 ::zui::Handle dirLightActive;
		inline  ::zui::Handle _hx_set_dirLightActive(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightActive=_hx_v; }
		 ::zui::Handle dirLightColor;
		inline  ::zui::Handle _hx_set_dirLightColor(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightColor=_hx_v; }
		int dirLightColorV;
		 ::zui::Handle dirLightX;
		inline  ::zui::Handle _hx_set_dirLightX(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightX=_hx_v; }
		 ::zui::Handle dirLightY;
		inline  ::zui::Handle _hx_set_dirLightY(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightY=_hx_v; }
		 ::zui::Handle dirLightZ;
		inline  ::zui::Handle _hx_set_dirLightZ(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightZ=_hx_v; }
		 ::zui::Handle pointLightAmbient;
		inline  ::zui::Handle _hx_set_pointLightAmbient(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightAmbient=_hx_v; }
		 ::zui::Handle pointLightDiffuse;
		inline  ::zui::Handle _hx_set_pointLightDiffuse(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightDiffuse=_hx_v; }
		 ::zui::Handle pointLightSpecular;
		inline  ::zui::Handle _hx_set_pointLightSpecular(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightSpecular=_hx_v; }
		 ::zui::Handle pointLightActive;
		inline  ::zui::Handle _hx_set_pointLightActive(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightActive=_hx_v; }
		 ::zui::Handle pointLightColor;
		inline  ::zui::Handle _hx_set_pointLightColor(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightColor=_hx_v; }
		int pointLightColorV;
		 ::zui::Handle pointLightX;
		inline  ::zui::Handle _hx_set_pointLightX(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightX=_hx_v; }
		 ::zui::Handle pointLightY;
		inline  ::zui::Handle _hx_set_pointLightY(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightY=_hx_v; }
		 ::zui::Handle pointLightZ;
		inline  ::zui::Handle _hx_set_pointLightZ(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pointLightZ=_hx_v; }
		 ::zui::Handle spotLightAmbient;
		inline  ::zui::Handle _hx_set_spotLightAmbient(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightAmbient=_hx_v; }
		 ::zui::Handle spotLightDiffuse;
		inline  ::zui::Handle _hx_set_spotLightDiffuse(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightDiffuse=_hx_v; }
		 ::zui::Handle spotLightSpecular;
		inline  ::zui::Handle _hx_set_spotLightSpecular(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightSpecular=_hx_v; }
		 ::zui::Handle spotLightActive;
		inline  ::zui::Handle _hx_set_spotLightActive(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightActive=_hx_v; }
		 ::zui::Handle spotLightColor;
		inline  ::zui::Handle _hx_set_spotLightColor(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightColor=_hx_v; }
		int spotLightColorV;
		 ::zui::Handle spotLightX;
		inline  ::zui::Handle _hx_set_spotLightX(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightX=_hx_v; }
		 ::zui::Handle spotLightY;
		inline  ::zui::Handle _hx_set_spotLightY(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightY=_hx_v; }
		 ::zui::Handle spotLightZ;
		inline  ::zui::Handle _hx_set_spotLightZ(::hx::StackContext *_hx_ctx, ::zui::Handle _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightZ=_hx_v; }
		void loadEverything();
		::Dynamic loadEverything_dyn();

		void update();
		::Dynamic update_dyn();

		void render(::Array< ::Dynamic> frames);
		::Dynamic render_dyn();

};


#endif /* INCLUDED_Scene */ 
