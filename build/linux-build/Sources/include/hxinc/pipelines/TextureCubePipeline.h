// Generated by Haxe 4.3.0+fa3f709
#ifndef INCLUDED_pipelines_TextureCubePipeline
#define INCLUDED_pipelines_TextureCubePipeline

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS2(kha,graphics4,ConstantLocation)
HX_DECLARE_CLASS2(kha,graphics4,Graphics)
HX_DECLARE_CLASS2(kha,graphics4,IndexBuffer)
HX_DECLARE_CLASS2(kha,graphics4,PipelineState)
HX_DECLARE_CLASS2(kha,graphics4,PipelineStateBase)
HX_DECLARE_CLASS2(kha,graphics4,TextureUnit)
HX_DECLARE_CLASS2(kha,graphics4,VertexBuffer)
HX_DECLARE_CLASS1(pipelines,TextureCubePipeline)

namespace pipelines{


class HXCPP_CLASS_ATTRIBUTES TextureCubePipeline_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TextureCubePipeline_obj OBJ_;
		TextureCubePipeline_obj();

	public:
		enum { _hx_ClassId = 0x280dafe1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="pipelines.TextureCubePipeline")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"pipelines.TextureCubePipeline"); }
		static ::hx::ObjectPtr< TextureCubePipeline_obj > __new();
		static ::hx::ObjectPtr< TextureCubePipeline_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TextureCubePipeline_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TextureCubePipeline",92,1a,ac,f0); }

		static void __boot();
		static ::Array< Float > new_uvs;
		static ::Array< Float > new_normals;
		static ::Array< Float > new_vertices;
		 ::kha::graphics4::PipelineState pipeline;
		inline  ::kha::graphics4::PipelineState _hx_set_pipeline(::hx::StackContext *_hx_ctx, ::kha::graphics4::PipelineState _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pipeline=_hx_v; }
		::Dynamic mvpID;
		inline ::Dynamic _hx_set_mvpID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return mvpID=_hx_v; }
		::Dynamic projID;
		inline ::Dynamic _hx_set_projID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return projID=_hx_v; }
		::Dynamic viewID;
		inline ::Dynamic _hx_set_viewID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return viewID=_hx_v; }
		::Dynamic modelID;
		inline ::Dynamic _hx_set_modelID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return modelID=_hx_v; }
		::Dynamic materialShininessID;
		inline ::Dynamic _hx_set_materialShininessID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return materialShininessID=_hx_v; }
		::Dynamic diffuseMapID;
		inline ::Dynamic _hx_set_diffuseMapID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return diffuseMapID=_hx_v; }
		 ::kha::Image diffuseMap;
		inline  ::kha::Image _hx_set_diffuseMap(::hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return diffuseMap=_hx_v; }
		::Dynamic specularMapID;
		inline ::Dynamic _hx_set_specularMapID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return specularMapID=_hx_v; }
		 ::kha::Image specularMap;
		inline  ::kha::Image _hx_set_specularMap(::hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return specularMap=_hx_v; }
		::Dynamic dirLightDirectionID;
		inline ::Dynamic _hx_set_dirLightDirectionID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightDirectionID=_hx_v; }
		::Dynamic dirLightAmbientID;
		inline ::Dynamic _hx_set_dirLightAmbientID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightAmbientID=_hx_v; }
		::Dynamic dirLightDiffuseID;
		inline ::Dynamic _hx_set_dirLightDiffuseID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightDiffuseID=_hx_v; }
		::Dynamic dirLightSpecularID;
		inline ::Dynamic _hx_set_dirLightSpecularID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return dirLightSpecularID=_hx_v; }
		::Dynamic spotLightPositionID;
		inline ::Dynamic _hx_set_spotLightPositionID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightPositionID=_hx_v; }
		::Dynamic spotLightDirectionID;
		inline ::Dynamic _hx_set_spotLightDirectionID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightDirectionID=_hx_v; }
		::Dynamic spotLightAmbientID;
		inline ::Dynamic _hx_set_spotLightAmbientID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightAmbientID=_hx_v; }
		::Dynamic spotLightDiffuseID;
		inline ::Dynamic _hx_set_spotLightDiffuseID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightDiffuseID=_hx_v; }
		::Dynamic spotLightSpecularID;
		inline ::Dynamic _hx_set_spotLightSpecularID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightSpecularID=_hx_v; }
		::Dynamic spotLightConstantID;
		inline ::Dynamic _hx_set_spotLightConstantID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightConstantID=_hx_v; }
		::Dynamic spotLightLinearID;
		inline ::Dynamic _hx_set_spotLightLinearID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightLinearID=_hx_v; }
		::Dynamic spotLightQuadraticID;
		inline ::Dynamic _hx_set_spotLightQuadraticID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightQuadraticID=_hx_v; }
		::Dynamic spotLightCutOffID;
		inline ::Dynamic _hx_set_spotLightCutOffID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightCutOffID=_hx_v; }
		::Dynamic spotLightOuterCutOffID;
		inline ::Dynamic _hx_set_spotLightOuterCutOffID(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return spotLightOuterCutOffID=_hx_v; }
		 ::kha::graphics4::VertexBuffer vertexBuffer;
		inline  ::kha::graphics4::VertexBuffer _hx_set_vertexBuffer(::hx::StackContext *_hx_ctx, ::kha::graphics4::VertexBuffer _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return vertexBuffer=_hx_v; }
		 ::kha::graphics4::IndexBuffer indexBuffer;
		inline  ::kha::graphics4::IndexBuffer _hx_set_indexBuffer(::hx::StackContext *_hx_ctx, ::kha::graphics4::IndexBuffer _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return indexBuffer=_hx_v; }
		void render(::Dynamic g, ::Dynamic params);
		::Dynamic render_dyn();

};

} // end namespace pipelines

#endif /* INCLUDED_pipelines_TextureCubePipeline */ 
