// Generated by Haxe 4.3.0+fa3f709
#include <hxcpp.h>

#ifndef INCLUDED_kha_SystemImpl
#include <hxinc/kha/SystemImpl.h>
#endif
#ifndef INCLUDED_kha_input_Pen
#include <hxinc/kha/input/Pen.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c9f4343854789049_180_new,"kha.input.Pen","new",0xe7865bfd,"kha.input.Pen.new","kha/input/Pen.hx",180,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_20_notify,"kha.input.Pen","notify",0x9e35af4c,"kha.input.Pen.notify","kha/input/Pen.hx",20,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_31_notifyEraser,"kha.input.Pen","notifyEraser",0xb3458538,"kha.input.Pen.notifyEraser","kha/input/Pen.hx",31,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_38_remove,"kha.input.Pen","remove",0x710570c7,"kha.input.Pen.remove","kha/input/Pen.hx",38,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_46_removeEraser,"kha.input.Pen","removeEraser",0xb4ac14f3,"kha.input.Pen.removeEraser","kha/input/Pen.hx",46,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_53_notifyWindowed,"kha.input.Pen","notifyWindowed",0x59275fbb,"kha.input.Pen.notifyWindowed","kha/input/Pen.hx",53,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_89_notifyEraserWindowed,"kha.input.Pen","notifyEraserWindowed",0xe82101a7,"kha.input.Pen.notifyEraserWindowed","kha/input/Pen.hx",89,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_125_removeWindowed,"kha.input.Pen","removeWindowed",0x6d1d9436,"kha.input.Pen.removeWindowed","kha/input/Pen.hx",125,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_149_removeEraserWindowed,"kha.input.Pen","removeEraserWindowed",0xaf864462,"kha.input.Pen.removeEraserWindowed","kha/input/Pen.hx",149,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_184_sendDownEvent,"kha.input.Pen","sendDownEvent",0x56ab17cd,"kha.input.Pen.sendDownEvent","kha/input/Pen.hx",184,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_192_sendUpEvent,"kha.input.Pen","sendUpEvent",0x37892bf4,"kha.input.Pen.sendUpEvent","kha/input/Pen.hx",192,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_200_sendMoveEvent,"kha.input.Pen","sendMoveEvent",0xfe5c12be,"kha.input.Pen.sendMoveEvent","kha/input/Pen.hx",200,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_208_sendEraserDownEvent,"kha.input.Pen","sendEraserDownEvent",0xae282321,"kha.input.Pen.sendEraserDownEvent","kha/input/Pen.hx",208,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_216_sendEraserUpEvent,"kha.input.Pen","sendEraserUpEvent",0x6d36fa48,"kha.input.Pen.sendEraserUpEvent","kha/input/Pen.hx",216,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_224_sendEraserMoveEvent,"kha.input.Pen","sendEraserMoveEvent",0x55d91e12,"kha.input.Pen.sendEraserMoveEvent","kha/input/Pen.hx",224,0x3387e655)
HX_LOCAL_STACK_FRAME(_hx_pos_c9f4343854789049_10_get,"kha.input.Pen","get",0xe7810c33,"kha.input.Pen.get","kha/input/Pen.hx",10,0x3387e655)
namespace kha{
namespace input{

void Pen_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_180_new)
HXDLIN( 180)		::kha::input::Pen_obj::instance = ::hx::ObjectPtr<OBJ_>(this);
            	}

Dynamic Pen_obj::__CreateEmpty() { return new Pen_obj; }

void *Pen_obj::_hx_vtable = 0;

Dynamic Pen_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Pen_obj > _hx_result = new Pen_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Pen_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x244da3d3;
}

void Pen_obj::notify( ::Dynamic downListener, ::Dynamic upListener, ::Dynamic moveListener){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_20_notify)
HXDLIN(  20)		this->notifyWindowed(0,downListener,upListener,moveListener);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,notify,(void))

void Pen_obj::notifyEraser( ::Dynamic eraserDownListener, ::Dynamic eraserUpListener, ::Dynamic eraserMoveListener){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_31_notifyEraser)
HXDLIN(  31)		this->notifyEraserWindowed(0,eraserDownListener,eraserUpListener,eraserMoveListener);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,notifyEraser,(void))

void Pen_obj::remove( ::Dynamic downListener, ::Dynamic upListener, ::Dynamic moveListener){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_38_remove)
HXDLIN(  38)		this->removeWindowed(0,downListener,upListener,moveListener);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,remove,(void))

void Pen_obj::removeEraser( ::Dynamic eraserDownListener, ::Dynamic eraserUpListener, ::Dynamic eraserMoveListener){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_46_removeEraser)
HXDLIN(  46)		this->removeEraserWindowed(0,eraserDownListener,eraserUpListener,eraserMoveListener);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,removeEraser,(void))

void Pen_obj::notifyWindowed(int windowId, ::Dynamic downListener, ::Dynamic upListener, ::Dynamic moveListener){
            	HX_GC_STACKFRAME(&_hx_pos_c9f4343854789049_53_notifyWindowed)
HXLINE(  54)		if (::hx::IsNotNull( downListener )) {
HXLINE(  55)			if (::hx::IsNull( this->windowDownListeners )) {
HXLINE(  56)				this->_hx_set_windowDownListeners(HX_CTX, ::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  58)			while((this->windowDownListeners->length <= windowId)){
HXLINE(  59)				this->windowDownListeners->push(::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  61)			this->windowDownListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->push(downListener);
            		}
HXLINE(  64)		if (::hx::IsNotNull( upListener )) {
HXLINE(  65)			if (::hx::IsNull( this->windowUpListeners )) {
HXLINE(  66)				this->_hx_set_windowUpListeners(HX_CTX, ::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  68)			while((this->windowUpListeners->length <= windowId)){
HXLINE(  69)				this->windowUpListeners->push(::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  71)			this->windowUpListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->push(upListener);
            		}
HXLINE(  74)		if (::hx::IsNotNull( moveListener )) {
HXLINE(  75)			if (::hx::IsNull( this->windowMoveListeners )) {
HXLINE(  76)				this->_hx_set_windowMoveListeners(HX_CTX, ::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  78)			while((this->windowMoveListeners->length <= windowId)){
HXLINE(  79)				this->windowMoveListeners->push(::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  81)			this->windowMoveListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->push(moveListener);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,notifyWindowed,(void))

void Pen_obj::notifyEraserWindowed(int windowId, ::Dynamic eraserDownListener, ::Dynamic eraserUpListener, ::Dynamic eraserMoveListener){
            	HX_GC_STACKFRAME(&_hx_pos_c9f4343854789049_89_notifyEraserWindowed)
HXLINE(  90)		if (::hx::IsNotNull( eraserDownListener )) {
HXLINE(  91)			if (::hx::IsNull( this->windowEraserDownListeners )) {
HXLINE(  92)				this->_hx_set_windowEraserDownListeners(HX_CTX, ::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  94)			while((this->windowEraserDownListeners->length <= windowId)){
HXLINE(  95)				this->windowEraserDownListeners->push(::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE(  97)			this->windowEraserDownListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->push(eraserDownListener);
            		}
HXLINE( 100)		if (::hx::IsNotNull( eraserUpListener )) {
HXLINE( 101)			if (::hx::IsNull( this->windowEraserUpListeners )) {
HXLINE( 102)				this->_hx_set_windowEraserUpListeners(HX_CTX, ::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE( 104)			while((this->windowEraserUpListeners->length <= windowId)){
HXLINE( 105)				this->windowEraserUpListeners->push(::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE( 107)			this->windowEraserUpListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->push(eraserUpListener);
            		}
HXLINE( 110)		if (::hx::IsNotNull( eraserMoveListener )) {
HXLINE( 111)			if (::hx::IsNull( this->windowEraserMoveListeners )) {
HXLINE( 112)				this->_hx_set_windowEraserMoveListeners(HX_CTX, ::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE( 114)			while((this->windowEraserMoveListeners->length <= windowId)){
HXLINE( 115)				this->windowEraserMoveListeners->push(::Array_obj< ::Dynamic>::__new(0));
            			}
HXLINE( 117)			this->windowEraserMoveListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->push(eraserMoveListener);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,notifyEraserWindowed,(void))

void Pen_obj::removeWindowed(int windowId, ::Dynamic downListener, ::Dynamic upListener, ::Dynamic moveListener){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_125_removeWindowed)
HXLINE( 126)		bool _hx_tmp;
HXDLIN( 126)		if (::hx::IsNotNull( downListener )) {
HXLINE( 126)			_hx_tmp = ::hx::IsNotNull( this->windowDownListeners );
            		}
            		else {
HXLINE( 126)			_hx_tmp = false;
            		}
HXDLIN( 126)		if (_hx_tmp) {
HXLINE( 127)			if ((windowId < this->windowDownListeners->length)) {
HXLINE( 128)				this->windowDownListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->remove(downListener);
            			}
            		}
HXLINE( 132)		bool _hx_tmp1;
HXDLIN( 132)		if (::hx::IsNotNull( upListener )) {
HXLINE( 132)			_hx_tmp1 = ::hx::IsNotNull( this->windowUpListeners );
            		}
            		else {
HXLINE( 132)			_hx_tmp1 = false;
            		}
HXDLIN( 132)		if (_hx_tmp1) {
HXLINE( 133)			if ((windowId < this->windowUpListeners->length)) {
HXLINE( 134)				this->windowUpListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->remove(upListener);
            			}
            		}
HXLINE( 138)		bool _hx_tmp2;
HXDLIN( 138)		if (::hx::IsNotNull( moveListener )) {
HXLINE( 138)			_hx_tmp2 = ::hx::IsNotNull( this->windowMoveListeners );
            		}
            		else {
HXLINE( 138)			_hx_tmp2 = false;
            		}
HXDLIN( 138)		if (_hx_tmp2) {
HXLINE( 139)			if ((windowId < this->windowMoveListeners->length)) {
HXLINE( 140)				this->windowMoveListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->remove(moveListener);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,removeWindowed,(void))

void Pen_obj::removeEraserWindowed(int windowId, ::Dynamic eraserDownListener, ::Dynamic eraserUpListener, ::Dynamic eraserMoveListener){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_149_removeEraserWindowed)
HXLINE( 150)		bool _hx_tmp;
HXDLIN( 150)		if (::hx::IsNotNull( eraserDownListener )) {
HXLINE( 150)			_hx_tmp = ::hx::IsNotNull( this->windowEraserDownListeners );
            		}
            		else {
HXLINE( 150)			_hx_tmp = false;
            		}
HXDLIN( 150)		if (_hx_tmp) {
HXLINE( 151)			if ((windowId < this->windowEraserDownListeners->length)) {
HXLINE( 152)				this->windowEraserDownListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->remove(eraserDownListener);
            			}
            		}
HXLINE( 156)		bool _hx_tmp1;
HXDLIN( 156)		if (::hx::IsNotNull( eraserUpListener )) {
HXLINE( 156)			_hx_tmp1 = ::hx::IsNotNull( this->windowEraserUpListeners );
            		}
            		else {
HXLINE( 156)			_hx_tmp1 = false;
            		}
HXDLIN( 156)		if (_hx_tmp1) {
HXLINE( 157)			if ((windowId < this->windowEraserUpListeners->length)) {
HXLINE( 158)				this->windowEraserUpListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->remove(eraserUpListener);
            			}
            		}
HXLINE( 162)		bool _hx_tmp2;
HXDLIN( 162)		if (::hx::IsNotNull( eraserMoveListener )) {
HXLINE( 162)			_hx_tmp2 = ::hx::IsNotNull( this->windowEraserMoveListeners );
            		}
            		else {
HXLINE( 162)			_hx_tmp2 = false;
            		}
HXDLIN( 162)		if (_hx_tmp2) {
HXLINE( 163)			if ((windowId < this->windowEraserMoveListeners->length)) {
HXLINE( 164)				this->windowEraserMoveListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >()->remove(eraserMoveListener);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,removeEraserWindowed,(void))

void Pen_obj::sendDownEvent(int windowId,int x,int y,Float pressure){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_184_sendDownEvent)
HXDLIN( 184)		if (::hx::IsNotNull( this->windowDownListeners )) {
HXLINE( 185)			int _g = 0;
HXDLIN( 185)			::Array< ::Dynamic> _g1 = this->windowDownListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 185)			while((_g < _g1->length)){
HXLINE( 185)				 ::Dynamic listener = _g1->__get(_g);
HXDLIN( 185)				_g = (_g + 1);
HXLINE( 186)				listener(x,y,pressure);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,sendDownEvent,(void))

void Pen_obj::sendUpEvent(int windowId,int x,int y,Float pressure){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_192_sendUpEvent)
HXDLIN( 192)		if (::hx::IsNotNull( this->windowUpListeners )) {
HXLINE( 193)			int _g = 0;
HXDLIN( 193)			::Array< ::Dynamic> _g1 = this->windowUpListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 193)			while((_g < _g1->length)){
HXLINE( 193)				 ::Dynamic listener = _g1->__get(_g);
HXDLIN( 193)				_g = (_g + 1);
HXLINE( 194)				listener(x,y,pressure);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,sendUpEvent,(void))

void Pen_obj::sendMoveEvent(int windowId,int x,int y,Float pressure){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_200_sendMoveEvent)
HXDLIN( 200)		if (::hx::IsNotNull( this->windowMoveListeners )) {
HXLINE( 201)			int _g = 0;
HXDLIN( 201)			::Array< ::Dynamic> _g1 = this->windowMoveListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 201)			while((_g < _g1->length)){
HXLINE( 201)				 ::Dynamic listener = _g1->__get(_g);
HXDLIN( 201)				_g = (_g + 1);
HXLINE( 202)				listener(x,y,pressure);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,sendMoveEvent,(void))

void Pen_obj::sendEraserDownEvent(int windowId,int x,int y,Float pressure){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_208_sendEraserDownEvent)
HXDLIN( 208)		if (::hx::IsNotNull( this->windowEraserDownListeners )) {
HXLINE( 209)			int _g = 0;
HXDLIN( 209)			::Array< ::Dynamic> _g1 = this->windowEraserDownListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 209)			while((_g < _g1->length)){
HXLINE( 209)				 ::Dynamic listener = _g1->__get(_g);
HXDLIN( 209)				_g = (_g + 1);
HXLINE( 210)				listener(x,y,pressure);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,sendEraserDownEvent,(void))

void Pen_obj::sendEraserUpEvent(int windowId,int x,int y,Float pressure){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_216_sendEraserUpEvent)
HXDLIN( 216)		if (::hx::IsNotNull( this->windowEraserUpListeners )) {
HXLINE( 217)			int _g = 0;
HXDLIN( 217)			::Array< ::Dynamic> _g1 = this->windowEraserUpListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 217)			while((_g < _g1->length)){
HXLINE( 217)				 ::Dynamic listener = _g1->__get(_g);
HXDLIN( 217)				_g = (_g + 1);
HXLINE( 218)				listener(x,y,pressure);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,sendEraserUpEvent,(void))

void Pen_obj::sendEraserMoveEvent(int windowId,int x,int y,Float pressure){
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_224_sendEraserMoveEvent)
HXDLIN( 224)		if (::hx::IsNotNull( this->windowEraserMoveListeners )) {
HXLINE( 225)			int _g = 0;
HXDLIN( 225)			::Array< ::Dynamic> _g1 = this->windowEraserMoveListeners->__get(windowId).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 225)			while((_g < _g1->length)){
HXLINE( 225)				 ::Dynamic listener = _g1->__get(_g);
HXDLIN( 225)				_g = (_g + 1);
HXLINE( 226)				listener(x,y,pressure);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Pen_obj,sendEraserMoveEvent,(void))

 ::kha::input::Pen Pen_obj::get(::hx::Null< int >  __o_num){
            		int num = __o_num.Default(0);
            	HX_STACKFRAME(&_hx_pos_c9f4343854789049_10_get)
HXDLIN(  10)		return ::kha::SystemImpl_obj::getPen(num);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Pen_obj,get,return )

 ::kha::input::Pen Pen_obj::instance;


Pen_obj::Pen_obj()
{
}

void Pen_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Pen);
	HX_MARK_MEMBER_NAME(windowDownListeners,"windowDownListeners");
	HX_MARK_MEMBER_NAME(windowUpListeners,"windowUpListeners");
	HX_MARK_MEMBER_NAME(windowMoveListeners,"windowMoveListeners");
	HX_MARK_MEMBER_NAME(windowEraserDownListeners,"windowEraserDownListeners");
	HX_MARK_MEMBER_NAME(windowEraserUpListeners,"windowEraserUpListeners");
	HX_MARK_MEMBER_NAME(windowEraserMoveListeners,"windowEraserMoveListeners");
	HX_MARK_END_CLASS();
}

void Pen_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(windowDownListeners,"windowDownListeners");
	HX_VISIT_MEMBER_NAME(windowUpListeners,"windowUpListeners");
	HX_VISIT_MEMBER_NAME(windowMoveListeners,"windowMoveListeners");
	HX_VISIT_MEMBER_NAME(windowEraserDownListeners,"windowEraserDownListeners");
	HX_VISIT_MEMBER_NAME(windowEraserUpListeners,"windowEraserUpListeners");
	HX_VISIT_MEMBER_NAME(windowEraserMoveListeners,"windowEraserMoveListeners");
}

::hx::Val Pen_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"notify") ) { return ::hx::Val( notify_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return ::hx::Val( remove_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"sendUpEvent") ) { return ::hx::Val( sendUpEvent_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"notifyEraser") ) { return ::hx::Val( notifyEraser_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeEraser") ) { return ::hx::Val( removeEraser_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sendDownEvent") ) { return ::hx::Val( sendDownEvent_dyn() ); }
		if (HX_FIELD_EQ(inName,"sendMoveEvent") ) { return ::hx::Val( sendMoveEvent_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"notifyWindowed") ) { return ::hx::Val( notifyWindowed_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeWindowed") ) { return ::hx::Val( removeWindowed_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"windowUpListeners") ) { return ::hx::Val( windowUpListeners ); }
		if (HX_FIELD_EQ(inName,"sendEraserUpEvent") ) { return ::hx::Val( sendEraserUpEvent_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"windowDownListeners") ) { return ::hx::Val( windowDownListeners ); }
		if (HX_FIELD_EQ(inName,"windowMoveListeners") ) { return ::hx::Val( windowMoveListeners ); }
		if (HX_FIELD_EQ(inName,"sendEraserDownEvent") ) { return ::hx::Val( sendEraserDownEvent_dyn() ); }
		if (HX_FIELD_EQ(inName,"sendEraserMoveEvent") ) { return ::hx::Val( sendEraserMoveEvent_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"notifyEraserWindowed") ) { return ::hx::Val( notifyEraserWindowed_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeEraserWindowed") ) { return ::hx::Val( removeEraserWindowed_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"windowEraserUpListeners") ) { return ::hx::Val( windowEraserUpListeners ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"windowEraserDownListeners") ) { return ::hx::Val( windowEraserDownListeners ); }
		if (HX_FIELD_EQ(inName,"windowEraserMoveListeners") ) { return ::hx::Val( windowEraserMoveListeners ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Pen_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { outValue = ( instance ); return true; }
	}
	return false;
}

::hx::Val Pen_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"windowUpListeners") ) { _hx_set_windowUpListeners(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"windowDownListeners") ) { _hx_set_windowDownListeners(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"windowMoveListeners") ) { _hx_set_windowMoveListeners(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"windowEraserUpListeners") ) { _hx_set_windowEraserUpListeners(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"windowEraserDownListeners") ) { _hx_set_windowEraserDownListeners(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"windowEraserMoveListeners") ) { _hx_set_windowEraserMoveListeners(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Pen_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { instance=ioValue.Cast<  ::kha::input::Pen >(); return true; }
	}
	return false;
}

void Pen_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("windowDownListeners",ad,36,38,35));
	outFields->push(HX_("windowUpListeners",94,65,2c,f0));
	outFields->push(HX_("windowMoveListeners",1e,fe,7f,65));
	outFields->push(HX_("windowEraserDownListeners",41,2a,3d,02));
	outFields->push(HX_("windowEraserUpListeners",28,8c,2b,e2));
	outFields->push(HX_("windowEraserMoveListeners",b2,f1,84,32));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Pen_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Pen_obj,windowDownListeners),HX_("windowDownListeners",ad,36,38,35)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Pen_obj,windowUpListeners),HX_("windowUpListeners",94,65,2c,f0)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Pen_obj,windowMoveListeners),HX_("windowMoveListeners",1e,fe,7f,65)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Pen_obj,windowEraserDownListeners),HX_("windowEraserDownListeners",41,2a,3d,02)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Pen_obj,windowEraserUpListeners),HX_("windowEraserUpListeners",28,8c,2b,e2)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Pen_obj,windowEraserMoveListeners),HX_("windowEraserMoveListeners",b2,f1,84,32)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo Pen_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::kha::input::Pen */ ,(void *) &Pen_obj::instance,HX_("instance",95,1f,e1,59)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String Pen_obj_sMemberFields[] = {
	HX_("notify",c9,da,b8,31),
	HX_("notifyEraser",75,ec,f5,b3),
	HX_("remove",44,9c,88,04),
	HX_("removeEraser",30,7c,5c,b5),
	HX_("notifyWindowed",38,d0,2d,34),
	HX_("notifyEraserWindowed",e4,6d,96,7d),
	HX_("removeWindowed",b3,04,24,48),
	HX_("removeEraserWindowed",9f,b0,fb,44),
	HX_("windowDownListeners",ad,36,38,35),
	HX_("windowUpListeners",94,65,2c,f0),
	HX_("windowMoveListeners",1e,fe,7f,65),
	HX_("windowEraserDownListeners",41,2a,3d,02),
	HX_("windowEraserUpListeners",28,8c,2b,e2),
	HX_("windowEraserMoveListeners",b2,f1,84,32),
	HX_("sendDownEvent",f0,05,55,f0),
	HX_("sendUpEvent",57,3b,46,5c),
	HX_("sendMoveEvent",e1,00,06,98),
	HX_("sendEraserDownEvent",84,cd,67,10),
	HX_("sendEraserUpEvent",eb,35,76,14),
	HX_("sendEraserMoveEvent",75,c8,18,b8),
	::String(null()) };

static void Pen_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Pen_obj::instance,"instance");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Pen_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Pen_obj::instance,"instance");
};

#endif

::hx::Class Pen_obj::__mClass;

static ::String Pen_obj_sStaticFields[] = {
	HX_("get",96,80,4e,00),
	HX_("instance",95,1f,e1,59),
	::String(null())
};

void Pen_obj::__register()
{
	Pen_obj _hx_dummy;
	Pen_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.input.Pen",8b,99,d7,39);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Pen_obj::__GetStatic;
	__mClass->mSetStaticField = &Pen_obj::__SetStatic;
	__mClass->mMarkFunc = Pen_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Pen_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Pen_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Pen_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Pen_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Pen_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Pen_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace input
