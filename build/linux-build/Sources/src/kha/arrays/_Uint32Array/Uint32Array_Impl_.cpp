// Generated by Haxe 4.3.0+fa3f709
#include <hxcpp.h>

#ifndef INCLUDED_3fe8139d5204232b
#define INCLUDED_3fe8139d5204232b
#include "cpp_bytearray.h"
#endif
#ifndef INCLUDED_kha_arrays_ByteArrayPrivate
#include <hxinc/kha/arrays/ByteArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_arrays__ByteArray_ByteArray_Impl_
#include <hxinc/kha/arrays/_ByteArray/ByteArray_Impl_.h>
#endif
#ifndef INCLUDED_kha_arrays__Uint32Array_Uint32Array_Impl_
#include <hxinc/kha/arrays/_Uint32Array/Uint32Array_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_3cebbac1c767366f_8_get_length,"kha.arrays._Uint32Array.Uint32Array_Impl_","get_length",0xcfb72520,"kha.arrays._Uint32Array.Uint32Array_Impl_.get_length","kha/arrays/Uint32Array.hx",8,0x6874c248)
HX_LOCAL_STACK_FRAME(_hx_pos_3cebbac1c767366f_11__new,"kha.arrays._Uint32Array.Uint32Array_Impl_","_new",0x60ae5b12,"kha.arrays._Uint32Array.Uint32Array_Impl_._new","kha/arrays/Uint32Array.hx",11,0x6874c248)
HX_LOCAL_STACK_FRAME(_hx_pos_3cebbac1c767366f_17_get,"kha.arrays._Uint32Array.Uint32Array_Impl_","get",0x60e33c05,"kha.arrays._Uint32Array.Uint32Array_Impl_.get","kha/arrays/Uint32Array.hx",17,0x6874c248)
HX_LOCAL_STACK_FRAME(_hx_pos_3cebbac1c767366f_21_set,"kha.arrays._Uint32Array.Uint32Array_Impl_","set",0x60ec5711,"kha.arrays._Uint32Array.Uint32Array_Impl_.set","kha/arrays/Uint32Array.hx",21,0x6874c248)
HX_LOCAL_STACK_FRAME(_hx_pos_3cebbac1c767366f_27_subarray,"kha.arrays._Uint32Array.Uint32Array_Impl_","subarray",0x2c83c64a,"kha.arrays._Uint32Array.Uint32Array_Impl_.subarray","kha/arrays/Uint32Array.hx",27,0x6874c248)
namespace kha{
namespace arrays{
namespace _Uint32Array{

void Uint32Array_Impl__obj::__construct() { }

Dynamic Uint32Array_Impl__obj::__CreateEmpty() { return new Uint32Array_Impl__obj; }

void *Uint32Array_Impl__obj::_hx_vtable = 0;

Dynamic Uint32Array_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Uint32Array_Impl__obj > _hx_result = new Uint32Array_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Uint32Array_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3b764721;
}

int Uint32Array_Impl__obj::get_length( ::kha::arrays::ByteArrayPrivate this1){
            	HX_STACKFRAME(&_hx_pos_3cebbac1c767366f_8_get_length)
HXDLIN(   8)		return (this1->byteArrayLength >> 2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Uint32Array_Impl__obj,get_length,return )

 ::kha::arrays::ByteArrayPrivate Uint32Array_Impl__obj::_new(int elements){
            	HX_GC_STACKFRAME(&_hx_pos_3cebbac1c767366f_11__new)
HXLINE(  12)		int byteLength = (elements * 4);
HXDLIN(  12)		 bytearray buffer = bytearray();
HXDLIN(  12)		if ((byteLength > 0)) {
HXLINE(  12)			buffer.alloc(byteLength);
            		}
HXDLIN(  12)		 ::kha::arrays::ByteArrayPrivate this1 =  ::kha::arrays::ByteArrayPrivate_obj::__alloc( HX_CTX ,0,byteLength);
HXDLIN(  12)		this1->self = buffer;
HXDLIN(  12)		this1->self.addRef();
HXLINE(  11)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Uint32Array_Impl__obj,_new,return )

int Uint32Array_Impl__obj::get( ::kha::arrays::ByteArrayPrivate this1,int k){
            	HX_STACKFRAME(&_hx_pos_3cebbac1c767366f_17_get)
HXDLIN(  17)		return *(uint32_t *)&this1->self.data[this1->byteArrayOffset + (k * 4)];
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Uint32Array_Impl__obj,get,return )

int Uint32Array_Impl__obj::set( ::kha::arrays::ByteArrayPrivate this1,int k,int v){
            	HX_STACKFRAME(&_hx_pos_3cebbac1c767366f_21_set)
HXLINE(  22)		*((uint32_t *)&this1->self.data[this1->byteArrayOffset + (k * 4)]) = v;
HXLINE(  23)		return *(uint32_t *)&this1->self.data[this1->byteArrayOffset + (k * 4)];
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Uint32Array_Impl__obj,set,return )

 ::kha::arrays::ByteArrayPrivate Uint32Array_Impl__obj::subarray( ::kha::arrays::ByteArrayPrivate this1,int start, ::Dynamic end){
            	HX_STACKFRAME(&_hx_pos_3cebbac1c767366f_27_subarray)
HXDLIN(  27)		 ::Dynamic _hx_tmp;
HXDLIN(  27)		if (::hx::IsNotNull( end )) {
HXDLIN(  27)			_hx_tmp = (( (int)(end) ) * 4);
            		}
            		else {
HXDLIN(  27)			_hx_tmp = null();
            		}
HXDLIN(  27)		return ::kha::arrays::_ByteArray::ByteArray_Impl__obj::subarray(this1,(start * 4),_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Uint32Array_Impl__obj,subarray,return )


Uint32Array_Impl__obj::Uint32Array_Impl__obj()
{
}

bool Uint32Array_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"subarray") ) { outValue = subarray_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Uint32Array_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Uint32Array_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Uint32Array_Impl__obj::__mClass;

static ::String Uint32Array_Impl__obj_sStaticFields[] = {
	HX_("get_length",af,04,8f,8f),
	HX_("_new",61,15,1f,3f),
	HX_("get",96,80,4e,00),
	HX_("set",a2,9b,57,00),
	HX_("subarray",19,54,81,07),
	::String(null())
};

void Uint32Array_Impl__obj::__register()
{
	Uint32Array_Impl__obj _hx_dummy;
	Uint32Array_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.arrays._Uint32Array.Uint32Array_Impl_",5d,f8,0c,60);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Uint32Array_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Uint32Array_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Uint32Array_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Uint32Array_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Uint32Array_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace arrays
} // end namespace _Uint32Array
