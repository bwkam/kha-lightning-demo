// Generated by Haxe 4.3.0+fa3f709
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <hxinc/Reflect.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <hxinc/kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha__Assets_FontList
#include <hxinc/kha/_Assets/FontList.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_472b3f8c48477a9c_36_new,"kha._Assets.FontList","new",0x50cce395,"kha._Assets.FontList.new","kha/Assets.hx",36,0x66f27110)
static const ::String _hx_array_data_232c7523_1[] = {
	HX_("DroidSans",8f,c9,16,4f),
};
static const ::String _hx_array_data_232c7523_2[] = {
	HX_("DroidSans.ttf",87,78,bc,91),
};
static const int _hx_array_data_232c7523_3[] = {
	(int)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_472b3f8c48477a9c_40_get,"kha._Assets.FontList","get",0x50c793cb,"kha._Assets.FontList.get","kha/Assets.hx",40,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4a5b61adc637a5b1_154_DroidSansLoad,"kha._Assets.FontList","DroidSansLoad",0xd7480aca,"kha._Assets.FontList.DroidSansLoad","kha/internal/AssetsBuilder.hx",154,0x6901246d)
HX_LOCAL_STACK_FRAME(_hx_pos_4a5b61adc637a5b1_195_DroidSansUnload,"kha._Assets.FontList","DroidSansUnload",0x4e9582a3,"kha._Assets.FontList.DroidSansUnload","kha/internal/AssetsBuilder.hx",195,0x6901246d)
namespace kha{
namespace _Assets{

void FontList_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_472b3f8c48477a9c_36_new)
HXLINE( 210)		this->_hx_set_names(HX_CTX, ::Array_obj< ::String >::fromData( _hx_array_data_232c7523_1,1));
HXLINE( 134)		this->_hx_set_DroidSansSize(HX_CTX, 1);
HXLINE( 125)		this->_hx_set_DroidSansDescription(HX_CTX,  ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::fromData( _hx_array_data_232c7523_2,1))
            			->setFixed(1,HX_("file_sizes",4f,23,b0,24),::Array_obj< int >::fromData( _hx_array_data_232c7523_3,1))
            			->setFixed(2,HX_("name",4b,72,ff,48),HX_("DroidSans",8f,c9,16,4f))
            			->setFixed(3,HX_("type",ba,f2,08,4d),HX_("font",cf,5d,c0,43))));
HXLINE( 117)		this->_hx_set_DroidSansName(HX_CTX, HX_("DroidSans",8f,c9,16,4f));
HXLINE( 100)		this->_hx_set_DroidSans(HX_CTX, null());
            	}

Dynamic FontList_obj::__CreateEmpty() { return new FontList_obj; }

void *FontList_obj::_hx_vtable = 0;

Dynamic FontList_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FontList_obj > _hx_result = new FontList_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FontList_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2ddefc2f;
}

 ::kha::Kravur FontList_obj::get(::String name){
            	HX_STACKFRAME(&_hx_pos_472b3f8c48477a9c_40_get)
HXDLIN(  40)		return ( ( ::kha::Kravur)(::Reflect_obj::field(::hx::ObjectPtr<OBJ_>(this),name)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(FontList_obj,get,return )

void FontList_obj::DroidSansLoad( ::Dynamic done, ::Dynamic failure){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::Kravur font){
            			HX_STACKFRAME(&_hx_pos_4a5b61adc637a5b1_154_DroidSansLoad)
HXDLIN( 154)			done();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_4a5b61adc637a5b1_154_DroidSansLoad)
HXDLIN( 154)		::kha::Assets_obj::loadFont(HX_("DroidSans",8f,c9,16,4f), ::Dynamic(new _hx_Closure_0(done)),failure,::hx::SourceInfo(HX_("kha/internal/AssetsBuilder.hx",6d,24,01,69),154,HX_("kha._Assets.FontList",23,75,2c,23),HX_("DroidSansLoad",55,03,8d,a5)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(FontList_obj,DroidSansLoad,(void))

void FontList_obj::DroidSansUnload(){
            	HX_GC_STACKFRAME(&_hx_pos_4a5b61adc637a5b1_195_DroidSansUnload)
HXLINE( 196)		this->DroidSans->unload();
HXLINE( 197)		this->_hx_set_DroidSans(HX_CTX, null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(FontList_obj,DroidSansUnload,(void))


::hx::ObjectPtr< FontList_obj > FontList_obj::__new() {
	::hx::ObjectPtr< FontList_obj > __this = new FontList_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< FontList_obj > FontList_obj::__alloc(::hx::Ctx *_hx_ctx) {
	FontList_obj *__this = (FontList_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FontList_obj), true, "kha._Assets.FontList"));
	*(void **)__this = FontList_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FontList_obj::FontList_obj()
{
}

void FontList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FontList);
	HX_MARK_MEMBER_NAME(DroidSans,"DroidSans");
	HX_MARK_MEMBER_NAME(DroidSansName,"DroidSansName");
	HX_MARK_MEMBER_NAME(DroidSansDescription,"DroidSansDescription");
	HX_MARK_MEMBER_NAME(DroidSansSize,"DroidSansSize");
	HX_MARK_MEMBER_NAME(names,"names");
	HX_MARK_END_CLASS();
}

void FontList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(DroidSans,"DroidSans");
	HX_VISIT_MEMBER_NAME(DroidSansName,"DroidSansName");
	HX_VISIT_MEMBER_NAME(DroidSansDescription,"DroidSansDescription");
	HX_VISIT_MEMBER_NAME(DroidSansSize,"DroidSansSize");
	HX_VISIT_MEMBER_NAME(names,"names");
}

::hx::Val FontList_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return ::hx::Val( get_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"names") ) { return ::hx::Val( names ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"DroidSans") ) { return ::hx::Val( DroidSans ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"DroidSansName") ) { return ::hx::Val( DroidSansName ); }
		if (HX_FIELD_EQ(inName,"DroidSansSize") ) { return ::hx::Val( DroidSansSize ); }
		if (HX_FIELD_EQ(inName,"DroidSansLoad") ) { return ::hx::Val( DroidSansLoad_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"DroidSansUnload") ) { return ::hx::Val( DroidSansUnload_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"DroidSansDescription") ) { return ::hx::Val( DroidSansDescription ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FontList_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"names") ) { _hx_set_names(HX_CTX_GET,inValue.Cast< ::Array< ::String > >()); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"DroidSans") ) { _hx_set_DroidSans(HX_CTX_GET,inValue.Cast<  ::kha::Kravur >()); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"DroidSansName") ) { _hx_set_DroidSansName(HX_CTX_GET,inValue.Cast< ::String >()); return inValue; }
		if (HX_FIELD_EQ(inName,"DroidSansSize") ) { _hx_set_DroidSansSize(HX_CTX_GET,inValue.Cast<  ::Dynamic >()); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"DroidSansDescription") ) { _hx_set_DroidSansDescription(HX_CTX_GET,inValue.Cast<  ::Dynamic >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FontList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("DroidSans",8f,c9,16,4f));
	outFields->push(HX_("DroidSansName",7a,db,d4,a6));
	outFields->push(HX_("DroidSansDescription",ad,b3,f9,c6));
	outFields->push(HX_("DroidSansSize",f0,09,29,aa));
	outFields->push(HX_("names",c8,8f,84,96));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FontList_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::kha::Kravur */ ,(int)offsetof(FontList_obj,DroidSans),HX_("DroidSans",8f,c9,16,4f)},
	{::hx::fsString,(int)offsetof(FontList_obj,DroidSansName),HX_("DroidSansName",7a,db,d4,a6)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FontList_obj,DroidSansDescription),HX_("DroidSansDescription",ad,b3,f9,c6)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FontList_obj,DroidSansSize),HX_("DroidSansSize",f0,09,29,aa)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(FontList_obj,names),HX_("names",c8,8f,84,96)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FontList_obj_sStaticStorageInfo = 0;
#endif

static ::String FontList_obj_sMemberFields[] = {
	HX_("get",96,80,4e,00),
	HX_("DroidSans",8f,c9,16,4f),
	HX_("DroidSansName",7a,db,d4,a6),
	HX_("DroidSansDescription",ad,b3,f9,c6),
	HX_("DroidSansSize",f0,09,29,aa),
	HX_("DroidSansLoad",55,03,8d,a5),
	HX_("DroidSansUnload",ee,f3,71,f2),
	HX_("names",c8,8f,84,96),
	::String(null()) };

::hx::Class FontList_obj::__mClass;

void FontList_obj::__register()
{
	FontList_obj _hx_dummy;
	FontList_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha._Assets.FontList",23,75,2c,23);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FontList_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FontList_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FontList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FontList_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace _Assets
