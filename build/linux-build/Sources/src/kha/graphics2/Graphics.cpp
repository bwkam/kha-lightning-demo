// Generated by Haxe 4.3.0+fa3f709
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <hxinc/kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Video
#include <hxinc/kha/Video.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <hxinc/kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <hxinc/kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <hxinc/kha/math/FastMatrix3.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5f2685bf915bf9af_242_new,"kha.graphics2.Graphics","new",0xbe5bae2e,"kha.graphics2.Graphics.new","kha/graphics2/Graphics.hx",242,0x8ef16900)
static const Float _hx_array_data_3249bf3c_1[] = {
	(Float)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_11_begin,"kha.graphics2.Graphics","begin",0xe66b5777,"kha.graphics2.Graphics.begin","kha/graphics2/Graphics.hx",11,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_13_end,"kha.graphics2.Graphics","end",0xbe54e1a9,"kha.graphics2.Graphics.end","kha/graphics2/Graphics.hx",13,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_15_flush,"kha.graphics2.Graphics","flush",0x38b0d012,"kha.graphics2.Graphics.flush","kha/graphics2/Graphics.hx",15,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_20_clear,"kha.graphics2.Graphics","clear",0x7e70dedb,"kha.graphics2.Graphics.clear","kha/graphics2/Graphics.hx",20,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_23_drawImage,"kha.graphics2.Graphics","drawImage",0x80858105,"kha.graphics2.Graphics.drawImage","kha/graphics2/Graphics.hx",23,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_30_drawSubImage,"kha.graphics2.Graphics","drawSubImage",0xd6fcfa51,"kha.graphics2.Graphics.drawSubImage","kha/graphics2/Graphics.hx",30,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_37_drawScaledImage,"kha.graphics2.Graphics","drawScaledImage",0x4311f38b,"kha.graphics2.Graphics.drawScaledImage","kha/graphics2/Graphics.hx",37,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_45_drawScaledSubImage,"kha.graphics2.Graphics","drawScaledSubImage",0xe6d65f8b,"kha.graphics2.Graphics.drawScaledSubImage","kha/graphics2/Graphics.hx",45,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_47_drawRect,"kha.graphics2.Graphics","drawRect",0xa4ec4eba,"kha.graphics2.Graphics.drawRect","kha/graphics2/Graphics.hx",47,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_49_fillRect,"kha.graphics2.Graphics","fillRect",0xb1949cb9,"kha.graphics2.Graphics.fillRect","kha/graphics2/Graphics.hx",49,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_58_drawString,"kha.graphics2.Graphics","drawString",0x06e93be7,"kha.graphics2.Graphics.drawString","kha/graphics2/Graphics.hx",58,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_67_drawCharacters,"kha.graphics2.Graphics","drawCharacters",0x63ddaec0,"kha.graphics2.Graphics.drawCharacters","kha/graphics2/Graphics.hx",67,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_69_drawLine,"kha.graphics2.Graphics","drawLine",0xa0f8198a,"kha.graphics2.Graphics.drawLine","kha/graphics2/Graphics.hx",69,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_71_drawVideo,"kha.graphics2.Graphics","drawVideo",0xfa187625,"kha.graphics2.Graphics.drawVideo","kha/graphics2/Graphics.hx",71,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_73_fillTriangle,"kha.graphics2.Graphics","fillTriangle",0x60bafcdd,"kha.graphics2.Graphics.fillTriangle","kha/graphics2/Graphics.hx",73,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_80_get_imageScaleQuality,"kha.graphics2.Graphics","get_imageScaleQuality",0x1aa79775,"kha.graphics2.Graphics.get_imageScaleQuality","kha/graphics2/Graphics.hx",80,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_84_set_imageScaleQuality,"kha.graphics2.Graphics","set_imageScaleQuality",0x6eb06581,"kha.graphics2.Graphics.set_imageScaleQuality","kha/graphics2/Graphics.hx",84,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_88_get_mipmapScaleQuality,"kha.graphics2.Graphics","get_mipmapScaleQuality",0x2d557d38,"kha.graphics2.Graphics.get_mipmapScaleQuality","kha/graphics2/Graphics.hx",88,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_92_set_mipmapScaleQuality,"kha.graphics2.Graphics","set_mipmapScaleQuality",0x6100f9ac,"kha.graphics2.Graphics.set_mipmapScaleQuality","kha/graphics2/Graphics.hx",92,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_101_get_color,"kha.graphics2.Graphics","get_color",0x8916fa08,"kha.graphics2.Graphics.get_color","kha/graphics2/Graphics.hx",101,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_105_set_color,"kha.graphics2.Graphics","set_color",0x6c67e614,"kha.graphics2.Graphics.set_color","kha/graphics2/Graphics.hx",105,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_111_get_font,"kha.graphics2.Graphics","get_font",0x085670ca,"kha.graphics2.Graphics.get_font","kha/graphics2/Graphics.hx",111,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_115_set_font,"kha.graphics2.Graphics","set_font",0xb6b3ca3e,"kha.graphics2.Graphics.set_font","kha/graphics2/Graphics.hx",115,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_121_get_fontSize,"kha.graphics2.Graphics","get_fontSize",0x526c6aab,"kha.graphics2.Graphics.get_fontSize","kha/graphics2/Graphics.hx",121,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_125_set_fontSize,"kha.graphics2.Graphics","set_fontSize",0x67658e1f,"kha.graphics2.Graphics.set_fontSize","kha/graphics2/Graphics.hx",125,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_134_get_transformation,"kha.graphics2.Graphics","get_transformation",0xa3e37884,"kha.graphics2.Graphics.get_transformation","kha/graphics2/Graphics.hx",134,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_137_set_transformation,"kha.graphics2.Graphics","set_transformation",0x8092aaf8,"kha.graphics2.Graphics.set_transformation","kha/graphics2/Graphics.hx",137,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_143_pushTransformation,"kha.graphics2.Graphics","pushTransformation",0x98a20735,"kha.graphics2.Graphics.pushTransformation","kha/graphics2/Graphics.hx",143,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_152_popTransformation,"kha.graphics2.Graphics","popTransformation",0x42d41588,"kha.graphics2.Graphics.popTransformation","kha/graphics2/Graphics.hx",152,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_161_scale,"kha.graphics2.Graphics","scale",0xaee43bd8,"kha.graphics2.Graphics.scale","kha/graphics2/Graphics.hx",161,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_164_pushScale,"kha.graphics2.Graphics","pushScale",0xb7fb629e,"kha.graphics2.Graphics.pushScale","kha/graphics2/Graphics.hx",164,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_170_translation,"kha.graphics2.Graphics","translation",0x4d918cbf,"kha.graphics2.Graphics.translation","kha/graphics2/Graphics.hx",170,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_174_translate,"kha.graphics2.Graphics","translate",0x4491039c,"kha.graphics2.Graphics.translate","kha/graphics2/Graphics.hx",174,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_178_pushTranslation,"kha.graphics2.Graphics","pushTranslation",0x1b230c05,"kha.graphics2.Graphics.pushTranslation","kha/graphics2/Graphics.hx",178,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_182_rotation,"kha.graphics2.Graphics","rotation",0x4d6194b0,"kha.graphics2.Graphics.rotation","kha/graphics2/Graphics.hx",182,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_189_rotate,"kha.graphics2.Graphics","rotate",0xe7ca7d4d,"kha.graphics2.Graphics.rotate","kha/graphics2/Graphics.hx",189,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_193_pushRotation,"kha.graphics2.Graphics","pushRotation",0x6da66daa,"kha.graphics2.Graphics.pushRotation","kha/graphics2/Graphics.hx",193,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_198_pushOpacity,"kha.graphics2.Graphics","pushOpacity",0xbdee1edf,"kha.graphics2.Graphics.pushOpacity","kha/graphics2/Graphics.hx",198,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_203_popOpacity,"kha.graphics2.Graphics","popOpacity",0x09ff042c,"kha.graphics2.Graphics.popOpacity","kha/graphics2/Graphics.hx",203,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_210_get_opacity,"kha.graphics2.Graphics","get_opacity",0x344f19b0,"kha.graphics2.Graphics.get_opacity","kha/graphics2/Graphics.hx",210,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_213_set_opacity,"kha.graphics2.Graphics","set_opacity",0x3ebc20bc,"kha.graphics2.Graphics.set_opacity","kha/graphics2/Graphics.hx",213,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_218_scissor,"kha.graphics2.Graphics","scissor",0xfd2d04ea,"kha.graphics2.Graphics.scissor","kha/graphics2/Graphics.hx",218,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_220_disableScissor,"kha.graphics2.Graphics","disableScissor",0x2d6bec06,"kha.graphics2.Graphics.disableScissor","kha/graphics2/Graphics.hx",220,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_228_get_pipeline,"kha.graphics2.Graphics","get_pipeline",0xcf1e679d,"kha.graphics2.Graphics.get_pipeline","kha/graphics2/Graphics.hx",228,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_231_set_pipeline,"kha.graphics2.Graphics","set_pipeline",0xe4178b11,"kha.graphics2.Graphics.set_pipeline","kha/graphics2/Graphics.hx",231,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_252_setTransformation,"kha.graphics2.Graphics","setTransformation",0x57bc6f59,"kha.graphics2.Graphics.setTransformation","kha/graphics2/Graphics.hx",252,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_254_setOpacity,"kha.graphics2.Graphics","setOpacity",0xf23a1a3b,"kha.graphics2.Graphics.setOpacity","kha/graphics2/Graphics.hx",254,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_256_setPipeline,"kha.graphics2.Graphics","setPipeline",0x3ed3e0b2,"kha.graphics2.Graphics.setPipeline","kha/graphics2/Graphics.hx",256,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_128_boot,"kha.graphics2.Graphics","boot",0xc9f5baa4,"kha.graphics2.Graphics.boot","kha/graphics2/Graphics.hx",128,0x8ef16900)
namespace kha{
namespace graphics2{

void Graphics_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_242_new)
HXLINE( 243)		this->_hx_set_transformations(HX_CTX, ::Array_obj< ::Dynamic>::__new(1)->init(0, ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ))));
HXLINE( 244)		this->transformationIndex = 0;
HXLINE( 245)		this->_hx_set_opacities(HX_CTX, ::Array_obj< Float >::fromData( _hx_array_data_3249bf3c_1,1));
HXLINE( 246)		this->myFontSize = 12;
HXLINE( 248)		this->_hx_set_pipe(HX_CTX, null());
            	}

Dynamic Graphics_obj::__CreateEmpty() { return new Graphics_obj; }

void *Graphics_obj::_hx_vtable = 0;

Dynamic Graphics_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Graphics_obj > _hx_result = new Graphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Graphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x125ede32;
}

void Graphics_obj::begin(::hx::Null< bool >  __o_clear, ::Dynamic clearColor){
            		bool clear = __o_clear.Default(true);
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_11_begin)
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,begin,(void))

void Graphics_obj::end(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_13_end)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,end,(void))

void Graphics_obj::flush(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_15_flush)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,flush,(void))

void Graphics_obj::clear( ::Dynamic color){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_20_clear)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,clear,(void))

void Graphics_obj::drawImage( ::kha::Image img,float x,float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_23_drawImage)
HXDLIN(  23)		int _hx_tmp = img->get_width();
HXDLIN(  23)		this->drawSubImage(img,x,y,( (float)(0) ),( (float)(0) ),( (float)(_hx_tmp) ),( (float)(img->get_height()) ));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawImage,(void))

void Graphics_obj::drawSubImage( ::kha::Image img,float x,float y,float sx,float sy,float sw,float sh){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_30_drawSubImage)
HXDLIN(  30)		this->drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Graphics_obj,drawSubImage,(void))

void Graphics_obj::drawScaledImage( ::kha::Image img,float dx,float dy,float dw,float dh){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_37_drawScaledImage)
HXDLIN(  37)		int _hx_tmp = img->get_width();
HXDLIN(  37)		this->drawScaledSubImage(img,( (float)(0) ),( (float)(0) ),( (float)(_hx_tmp) ),( (float)(img->get_height()) ),dx,dy,dw,dh);
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawScaledImage,(void))

void Graphics_obj::drawScaledSubImage( ::kha::Image img,float sx,float sy,float sw,float sh,float dx,float dy,float dw,float dh){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_45_drawScaledSubImage)
            	}


HX_DEFINE_DYNAMIC_FUNC9(Graphics_obj,drawScaledSubImage,(void))

void Graphics_obj::drawRect(Float x,Float y,Float width,Float height,::hx::Null< Float >  __o_strength){
            		Float strength = __o_strength.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_47_drawRect)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawRect,(void))

void Graphics_obj::fillRect(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_49_fillRect)
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,fillRect,(void))

void Graphics_obj::drawString(::String text,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_58_drawString)
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawString,(void))

void Graphics_obj::drawCharacters(::Array< int > text,int start,int length,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_67_drawCharacters)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawCharacters,(void))

void Graphics_obj::drawLine(Float x1,Float y1,Float x2,Float y2,::hx::Null< Float >  __o_strength){
            		Float strength = __o_strength.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_69_drawLine)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawLine,(void))

void Graphics_obj::drawVideo( ::kha::Video video,Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_71_drawVideo)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawVideo,(void))

void Graphics_obj::fillTriangle(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_73_fillTriangle)
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,fillTriangle,(void))

int Graphics_obj::get_imageScaleQuality(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_80_get_imageScaleQuality)
HXDLIN(  80)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_imageScaleQuality,return )

int Graphics_obj::set_imageScaleQuality(int value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_84_set_imageScaleQuality)
HXDLIN(  84)		return 1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_imageScaleQuality,return )

int Graphics_obj::get_mipmapScaleQuality(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_88_get_mipmapScaleQuality)
HXDLIN(  88)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_mipmapScaleQuality,return )

int Graphics_obj::set_mipmapScaleQuality(int value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_92_set_mipmapScaleQuality)
HXDLIN(  92)		return 1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_mipmapScaleQuality,return )

int Graphics_obj::get_color(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_101_get_color)
HXDLIN( 101)		return -16777216;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_color,return )

int Graphics_obj::set_color(int color){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_105_set_color)
HXDLIN( 105)		return -16777216;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_color,return )

 ::kha::Kravur Graphics_obj::get_font(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_111_get_font)
HXDLIN( 111)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_font,return )

 ::kha::Kravur Graphics_obj::set_font( ::kha::Kravur font){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_115_set_font)
HXDLIN( 115)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_font,return )

int Graphics_obj::get_fontSize(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_121_get_fontSize)
HXDLIN( 121)		return this->myFontSize;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_fontSize,return )

int Graphics_obj::set_fontSize(int value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_125_set_fontSize)
HXDLIN( 125)		return (this->myFontSize = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_fontSize,return )

 ::kha::math::FastMatrix3 Graphics_obj::get_transformation(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_134_get_transformation)
HXDLIN( 134)		return this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_transformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::set_transformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_137_set_transformation)
HXLINE( 138)		this->setTransformation(transformation);
HXLINE( 139)		{
HXLINE( 139)			 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 139)			_this->_00 = transformation->_00;
HXDLIN( 139)			_this->_10 = transformation->_10;
HXDLIN( 139)			_this->_20 = transformation->_20;
HXDLIN( 139)			_this->_01 = transformation->_01;
HXDLIN( 139)			_this->_11 = transformation->_11;
HXDLIN( 139)			_this->_21 = transformation->_21;
HXDLIN( 139)			_this->_02 = transformation->_02;
HXDLIN( 139)			_this->_12 = transformation->_12;
HXDLIN( 139)			_this->_22 = transformation->_22;
            		}
HXLINE( 140)		return transformation;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_transformation,return )

void Graphics_obj::pushTransformation( ::kha::math::FastMatrix3 trans){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_143_pushTransformation)
HXLINE( 144)		this->transformationIndex++;
HXLINE( 145)		if ((this->transformationIndex == this->transformations->length)) {
HXLINE( 146)			::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 146)			_hx_tmp->push( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) )));
            		}
HXLINE( 148)		{
HXLINE( 148)			 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 148)			_this->_00 = trans->_00;
HXDLIN( 148)			_this->_10 = trans->_10;
HXDLIN( 148)			_this->_20 = trans->_20;
HXDLIN( 148)			_this->_01 = trans->_01;
HXDLIN( 148)			_this->_11 = trans->_11;
HXDLIN( 148)			_this->_21 = trans->_21;
HXDLIN( 148)			_this->_02 = trans->_02;
HXDLIN( 148)			_this->_12 = trans->_12;
HXDLIN( 148)			_this->_22 = trans->_22;
            		}
HXLINE( 149)		this->setTransformation(this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,pushTransformation,(void))

 ::kha::math::FastMatrix3 Graphics_obj::popTransformation(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_152_popTransformation)
HXLINE( 153)		this->transformationIndex--;
HXLINE( 154)		if ((this->transformationIndex == -1)) {
HXLINE( 155)			HX_STACK_DO_THROW(HX_("There is no transformation matrix to remove, check your push/popTransformation code",23,02,07,fa));
            		}
HXLINE( 156)		this->setTransformation(this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >());
HXLINE( 157)		return this->transformations->__get((this->transformationIndex + 1)).StaticCast<  ::kha::math::FastMatrix3 >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,popTransformation,return )

void Graphics_obj::scale(float x,float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_161_scale)
HXDLIN( 161)		 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 161)		float _this__00 = x;
HXDLIN( 161)		float _this__10 = ( (float)(0) );
HXDLIN( 161)		float _this__20 = ( (float)(0) );
HXDLIN( 161)		float _this__01 = ( (float)(0) );
HXDLIN( 161)		float _this__11 = y;
HXDLIN( 161)		float _this__21 = ( (float)(0) );
HXDLIN( 161)		float _this__02 = ( (float)(0) );
HXDLIN( 161)		float _this__12 = ( (float)(0) );
HXDLIN( 161)		float _this__22 = ( (float)(1) );
HXDLIN( 161)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 161)		float m__00 = (((_this__00 * m->_00) + (_this__10 * m->_01)) + (_this__20 * m->_02));
HXDLIN( 161)		float m__10 = (((_this__00 * m->_10) + (_this__10 * m->_11)) + (_this__20 * m->_12));
HXDLIN( 161)		float m__20 = (((_this__00 * m->_20) + (_this__10 * m->_21)) + (_this__20 * m->_22));
HXDLIN( 161)		float m__01 = (((_this__01 * m->_00) + (_this__11 * m->_01)) + (_this__21 * m->_02));
HXDLIN( 161)		float m__11 = (((_this__01 * m->_10) + (_this__11 * m->_11)) + (_this__21 * m->_12));
HXDLIN( 161)		float m__21 = (((_this__01 * m->_20) + (_this__11 * m->_21)) + (_this__21 * m->_22));
HXDLIN( 161)		float m__02 = (((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02));
HXDLIN( 161)		float m__12 = (((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12));
HXDLIN( 161)		float m__22 = (((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22));
HXDLIN( 161)		_this->_00 = m__00;
HXDLIN( 161)		_this->_10 = m__10;
HXDLIN( 161)		_this->_20 = m__20;
HXDLIN( 161)		_this->_01 = m__01;
HXDLIN( 161)		_this->_11 = m__11;
HXDLIN( 161)		_this->_21 = m__21;
HXDLIN( 161)		_this->_02 = m__02;
HXDLIN( 161)		_this->_12 = m__12;
HXDLIN( 161)		_this->_22 = m__22;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,scale,(void))

void Graphics_obj::pushScale(float x,float y){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_164_pushScale)
HXLINE( 165)		float _this__00 = x;
HXDLIN( 165)		float _this__10 = ( (float)(0) );
HXDLIN( 165)		float _this__20 = ( (float)(0) );
HXDLIN( 165)		float _this__01 = ( (float)(0) );
HXDLIN( 165)		float _this__11 = y;
HXDLIN( 165)		float _this__21 = ( (float)(0) );
HXDLIN( 165)		float _this__02 = ( (float)(0) );
HXDLIN( 165)		float _this__12 = ( (float)(0) );
HXDLIN( 165)		float _this__22 = ( (float)(1) );
HXDLIN( 165)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 165)		float mat__00 = (((_this__00 * m->_00) + (_this__10 * m->_01)) + (_this__20 * m->_02));
HXDLIN( 165)		float mat__10 = (((_this__00 * m->_10) + (_this__10 * m->_11)) + (_this__20 * m->_12));
HXDLIN( 165)		float mat__20 = (((_this__00 * m->_20) + (_this__10 * m->_21)) + (_this__20 * m->_22));
HXDLIN( 165)		float mat__01 = (((_this__01 * m->_00) + (_this__11 * m->_01)) + (_this__21 * m->_02));
HXDLIN( 165)		float mat__11 = (((_this__01 * m->_10) + (_this__11 * m->_11)) + (_this__21 * m->_12));
HXDLIN( 165)		float mat__21 = (((_this__01 * m->_20) + (_this__11 * m->_21)) + (_this__21 * m->_22));
HXDLIN( 165)		float mat__02 = (((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02));
HXDLIN( 165)		float mat__12 = (((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12));
HXDLIN( 165)		float mat__22 = (((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22));
HXLINE( 166)		{
HXLINE( 166)			this->transformationIndex++;
HXDLIN( 166)			if ((this->transformationIndex == this->transformations->length)) {
HXLINE( 166)				::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 166)				_hx_tmp->push( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) )));
            			}
HXDLIN( 166)			{
HXLINE( 166)				 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 166)				_this->_00 = mat__00;
HXDLIN( 166)				_this->_10 = mat__10;
HXDLIN( 166)				_this->_20 = mat__20;
HXDLIN( 166)				_this->_01 = mat__01;
HXDLIN( 166)				_this->_11 = mat__11;
HXDLIN( 166)				_this->_21 = mat__21;
HXDLIN( 166)				_this->_02 = mat__02;
HXDLIN( 166)				_this->_12 = mat__12;
HXDLIN( 166)				_this->_22 = mat__22;
            			}
HXDLIN( 166)			this->setTransformation(this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,pushScale,(void))

 ::kha::math::FastMatrix3 Graphics_obj::translation(float tx,float ty){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_170_translation)
HXDLIN( 170)		float _this__00 = ( (float)(1) );
HXDLIN( 170)		float _this__10 = ( (float)(0) );
HXDLIN( 170)		float _this__20 = tx;
HXDLIN( 170)		float _this__01 = ( (float)(0) );
HXDLIN( 170)		float _this__11 = ( (float)(1) );
HXDLIN( 170)		float _this__21 = ty;
HXDLIN( 170)		float _this__02 = ( (float)(0) );
HXDLIN( 170)		float _this__12 = ( (float)(0) );
HXDLIN( 170)		float _this__22 = ( (float)(1) );
HXDLIN( 170)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 170)		return  ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,(((_this__00 * m->_00) + (_this__10 * m->_01)) + (_this__20 * m->_02)),(((_this__00 * m->_10) + (_this__10 * m->_11)) + (_this__20 * m->_12)),(((_this__00 * m->_20) + (_this__10 * m->_21)) + (_this__20 * m->_22)),(((_this__01 * m->_00) + (_this__11 * m->_01)) + (_this__21 * m->_02)),(((_this__01 * m->_10) + (_this__11 * m->_11)) + (_this__21 * m->_12)),(((_this__01 * m->_20) + (_this__11 * m->_21)) + (_this__21 * m->_22)),(((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02)),(((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12)),(((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,translation,return )

void Graphics_obj::translate(float tx,float ty){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_174_translate)
HXDLIN( 174)		 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 174)		float _this__00 = ( (float)(1) );
HXDLIN( 174)		float _this__10 = ( (float)(0) );
HXDLIN( 174)		float _this__20 = tx;
HXDLIN( 174)		float _this__01 = ( (float)(0) );
HXDLIN( 174)		float _this__11 = ( (float)(1) );
HXDLIN( 174)		float _this__21 = ty;
HXDLIN( 174)		float _this__02 = ( (float)(0) );
HXDLIN( 174)		float _this__12 = ( (float)(0) );
HXDLIN( 174)		float _this__22 = ( (float)(1) );
HXDLIN( 174)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 174)		float m__00 = (((_this__00 * m->_00) + (_this__10 * m->_01)) + (_this__20 * m->_02));
HXDLIN( 174)		float m__10 = (((_this__00 * m->_10) + (_this__10 * m->_11)) + (_this__20 * m->_12));
HXDLIN( 174)		float m__20 = (((_this__00 * m->_20) + (_this__10 * m->_21)) + (_this__20 * m->_22));
HXDLIN( 174)		float m__01 = (((_this__01 * m->_00) + (_this__11 * m->_01)) + (_this__21 * m->_02));
HXDLIN( 174)		float m__11 = (((_this__01 * m->_10) + (_this__11 * m->_11)) + (_this__21 * m->_12));
HXDLIN( 174)		float m__21 = (((_this__01 * m->_20) + (_this__11 * m->_21)) + (_this__21 * m->_22));
HXDLIN( 174)		float m__02 = (((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02));
HXDLIN( 174)		float m__12 = (((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12));
HXDLIN( 174)		float m__22 = (((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22));
HXDLIN( 174)		_this->_00 = m__00;
HXDLIN( 174)		_this->_10 = m__10;
HXDLIN( 174)		_this->_20 = m__20;
HXDLIN( 174)		_this->_01 = m__01;
HXDLIN( 174)		_this->_11 = m__11;
HXDLIN( 174)		_this->_21 = m__21;
HXDLIN( 174)		_this->_02 = m__02;
HXDLIN( 174)		_this->_12 = m__12;
HXDLIN( 174)		_this->_22 = m__22;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,translate,(void))

void Graphics_obj::pushTranslation(float tx,float ty){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_178_pushTranslation)
HXDLIN( 178)		float _this__00 = ( (float)(1) );
HXDLIN( 178)		float _this__10 = ( (float)(0) );
HXDLIN( 178)		float _this__20 = tx;
HXDLIN( 178)		float _this__01 = ( (float)(0) );
HXDLIN( 178)		float _this__11 = ( (float)(1) );
HXDLIN( 178)		float _this__21 = ty;
HXDLIN( 178)		float _this__02 = ( (float)(0) );
HXDLIN( 178)		float _this__12 = ( (float)(0) );
HXDLIN( 178)		float _this__22 = ( (float)(1) );
HXDLIN( 178)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 178)		float trans__00 = (((_this__00 * m->_00) + (_this__10 * m->_01)) + (_this__20 * m->_02));
HXDLIN( 178)		float trans__10 = (((_this__00 * m->_10) + (_this__10 * m->_11)) + (_this__20 * m->_12));
HXDLIN( 178)		float trans__20 = (((_this__00 * m->_20) + (_this__10 * m->_21)) + (_this__20 * m->_22));
HXDLIN( 178)		float trans__01 = (((_this__01 * m->_00) + (_this__11 * m->_01)) + (_this__21 * m->_02));
HXDLIN( 178)		float trans__11 = (((_this__01 * m->_10) + (_this__11 * m->_11)) + (_this__21 * m->_12));
HXDLIN( 178)		float trans__21 = (((_this__01 * m->_20) + (_this__11 * m->_21)) + (_this__21 * m->_22));
HXDLIN( 178)		float trans__02 = (((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02));
HXDLIN( 178)		float trans__12 = (((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12));
HXDLIN( 178)		float trans__22 = (((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22));
HXDLIN( 178)		this->transformationIndex++;
HXDLIN( 178)		if ((this->transformationIndex == this->transformations->length)) {
HXDLIN( 178)			::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 178)			_hx_tmp->push( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) )));
            		}
HXDLIN( 178)		{
HXDLIN( 178)			 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 178)			_this->_00 = trans__00;
HXDLIN( 178)			_this->_10 = trans__10;
HXDLIN( 178)			_this->_20 = trans__20;
HXDLIN( 178)			_this->_01 = trans__01;
HXDLIN( 178)			_this->_11 = trans__11;
HXDLIN( 178)			_this->_21 = trans__21;
HXDLIN( 178)			_this->_02 = trans__02;
HXDLIN( 178)			_this->_12 = trans__12;
HXDLIN( 178)			_this->_22 = trans__22;
            		}
HXDLIN( 178)		this->setTransformation(this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >());
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,pushTranslation,(void))

 ::kha::math::FastMatrix3 Graphics_obj::rotation(float angle,float centerx,float centery){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_182_rotation)
HXDLIN( 182)		float _this__00 = ( (float)(1) );
HXDLIN( 182)		float _this__10 = ( (float)(0) );
HXDLIN( 182)		float _this__20 = centerx;
HXDLIN( 182)		float _this__01 = ( (float)(0) );
HXDLIN( 182)		float _this__11 = ( (float)(1) );
HXDLIN( 182)		float _this__21 = centery;
HXDLIN( 182)		float _this__02 = ( (float)(0) );
HXDLIN( 182)		float _this__12 = ( (float)(0) );
HXDLIN( 182)		float _this__22 = ( (float)(1) );
HXLINE( 183)		float m__00 = ( (float)(::Math_obj::cos(( (Float)(angle) ))) );
HXDLIN( 183)		float m__10 = ( (float)(-(::Math_obj::sin(( (Float)(angle) )))) );
HXDLIN( 183)		float m__20 = ( (float)(0) );
HXDLIN( 183)		float m__01 = ( (float)(::Math_obj::sin(( (Float)(angle) ))) );
HXDLIN( 183)		float m__11 = ( (float)(::Math_obj::cos(( (Float)(angle) ))) );
HXDLIN( 183)		float m__21 = ( (float)(0) );
HXDLIN( 183)		float m__02 = ( (float)(0) );
HXDLIN( 183)		float m__12 = ( (float)(0) );
HXDLIN( 183)		float m__22 = ( (float)(1) );
HXLINE( 182)		float _this__001 = (((_this__00 * m__00) + (_this__10 * m__01)) + (_this__20 * m__02));
HXDLIN( 182)		float _this__101 = (((_this__00 * m__10) + (_this__10 * m__11)) + (_this__20 * m__12));
HXDLIN( 182)		float _this__201 = (((_this__00 * m__20) + (_this__10 * m__21)) + (_this__20 * m__22));
HXDLIN( 182)		float _this__011 = (((_this__01 * m__00) + (_this__11 * m__01)) + (_this__21 * m__02));
HXDLIN( 182)		float _this__111 = (((_this__01 * m__10) + (_this__11 * m__11)) + (_this__21 * m__12));
HXDLIN( 182)		float _this__211 = (((_this__01 * m__20) + (_this__11 * m__21)) + (_this__21 * m__22));
HXDLIN( 182)		float _this__021 = (((_this__02 * m__00) + (_this__12 * m__01)) + (_this__22 * m__02));
HXDLIN( 182)		float _this__121 = (((_this__02 * m__10) + (_this__12 * m__11)) + (_this__22 * m__12));
HXDLIN( 182)		float _this__221 = (((_this__02 * m__20) + (_this__12 * m__21)) + (_this__22 * m__22));
HXLINE( 184)		float m__001 = ( (float)(1) );
HXDLIN( 184)		float m__101 = ( (float)(0) );
HXDLIN( 184)		float m__201 = -(centerx);
HXDLIN( 184)		float m__011 = ( (float)(0) );
HXDLIN( 184)		float m__111 = ( (float)(1) );
HXDLIN( 184)		float m__211 = -(centery);
HXDLIN( 184)		float m__021 = ( (float)(0) );
HXDLIN( 184)		float m__121 = ( (float)(0) );
HXDLIN( 184)		float m__221 = ( (float)(1) );
HXLINE( 182)		float _this__002 = (((_this__001 * m__001) + (_this__101 * m__011)) + (_this__201 * m__021));
HXDLIN( 182)		float _this__102 = (((_this__001 * m__101) + (_this__101 * m__111)) + (_this__201 * m__121));
HXDLIN( 182)		float _this__202 = (((_this__001 * m__201) + (_this__101 * m__211)) + (_this__201 * m__221));
HXDLIN( 182)		float _this__012 = (((_this__011 * m__001) + (_this__111 * m__011)) + (_this__211 * m__021));
HXDLIN( 182)		float _this__112 = (((_this__011 * m__101) + (_this__111 * m__111)) + (_this__211 * m__121));
HXDLIN( 182)		float _this__212 = (((_this__011 * m__201) + (_this__111 * m__211)) + (_this__211 * m__221));
HXDLIN( 182)		float _this__022 = (((_this__021 * m__001) + (_this__121 * m__011)) + (_this__221 * m__021));
HXDLIN( 182)		float _this__122 = (((_this__021 * m__101) + (_this__121 * m__111)) + (_this__221 * m__121));
HXDLIN( 182)		float _this__222 = (((_this__021 * m__201) + (_this__121 * m__211)) + (_this__221 * m__221));
HXDLIN( 182)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 182)		return  ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,(((_this__002 * m->_00) + (_this__102 * m->_01)) + (_this__202 * m->_02)),(((_this__002 * m->_10) + (_this__102 * m->_11)) + (_this__202 * m->_12)),(((_this__002 * m->_20) + (_this__102 * m->_21)) + (_this__202 * m->_22)),(((_this__012 * m->_00) + (_this__112 * m->_01)) + (_this__212 * m->_02)),(((_this__012 * m->_10) + (_this__112 * m->_11)) + (_this__212 * m->_12)),(((_this__012 * m->_20) + (_this__112 * m->_21)) + (_this__212 * m->_22)),(((_this__022 * m->_00) + (_this__122 * m->_01)) + (_this__222 * m->_02)),(((_this__022 * m->_10) + (_this__122 * m->_11)) + (_this__222 * m->_12)),(((_this__022 * m->_20) + (_this__122 * m->_21)) + (_this__222 * m->_22)));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,rotation,return )

void Graphics_obj::rotate(float angle,float centerx,float centery){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_189_rotate)
HXDLIN( 189)		 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 189)		float _this__00 = ( (float)(1) );
HXDLIN( 189)		float _this__10 = ( (float)(0) );
HXDLIN( 189)		float _this__20 = centerx;
HXDLIN( 189)		float _this__01 = ( (float)(0) );
HXDLIN( 189)		float _this__11 = ( (float)(1) );
HXDLIN( 189)		float _this__21 = centery;
HXDLIN( 189)		float _this__02 = ( (float)(0) );
HXDLIN( 189)		float _this__12 = ( (float)(0) );
HXDLIN( 189)		float _this__22 = ( (float)(1) );
HXDLIN( 189)		float m__00 = ( (float)(::Math_obj::cos(( (Float)(angle) ))) );
HXDLIN( 189)		float m__10 = ( (float)(-(::Math_obj::sin(( (Float)(angle) )))) );
HXDLIN( 189)		float m__20 = ( (float)(0) );
HXDLIN( 189)		float m__01 = ( (float)(::Math_obj::sin(( (Float)(angle) ))) );
HXDLIN( 189)		float m__11 = ( (float)(::Math_obj::cos(( (Float)(angle) ))) );
HXDLIN( 189)		float m__21 = ( (float)(0) );
HXDLIN( 189)		float m__02 = ( (float)(0) );
HXDLIN( 189)		float m__12 = ( (float)(0) );
HXDLIN( 189)		float m__22 = ( (float)(1) );
HXDLIN( 189)		float _this__001 = (((_this__00 * m__00) + (_this__10 * m__01)) + (_this__20 * m__02));
HXDLIN( 189)		float _this__101 = (((_this__00 * m__10) + (_this__10 * m__11)) + (_this__20 * m__12));
HXDLIN( 189)		float _this__201 = (((_this__00 * m__20) + (_this__10 * m__21)) + (_this__20 * m__22));
HXDLIN( 189)		float _this__011 = (((_this__01 * m__00) + (_this__11 * m__01)) + (_this__21 * m__02));
HXDLIN( 189)		float _this__111 = (((_this__01 * m__10) + (_this__11 * m__11)) + (_this__21 * m__12));
HXDLIN( 189)		float _this__211 = (((_this__01 * m__20) + (_this__11 * m__21)) + (_this__21 * m__22));
HXDLIN( 189)		float _this__021 = (((_this__02 * m__00) + (_this__12 * m__01)) + (_this__22 * m__02));
HXDLIN( 189)		float _this__121 = (((_this__02 * m__10) + (_this__12 * m__11)) + (_this__22 * m__12));
HXDLIN( 189)		float _this__221 = (((_this__02 * m__20) + (_this__12 * m__21)) + (_this__22 * m__22));
HXDLIN( 189)		float m__001 = ( (float)(1) );
HXDLIN( 189)		float m__101 = ( (float)(0) );
HXDLIN( 189)		float m__201 = -(centerx);
HXDLIN( 189)		float m__011 = ( (float)(0) );
HXDLIN( 189)		float m__111 = ( (float)(1) );
HXDLIN( 189)		float m__211 = -(centery);
HXDLIN( 189)		float m__021 = ( (float)(0) );
HXDLIN( 189)		float m__121 = ( (float)(0) );
HXDLIN( 189)		float m__221 = ( (float)(1) );
HXDLIN( 189)		float _this__002 = (((_this__001 * m__001) + (_this__101 * m__011)) + (_this__201 * m__021));
HXDLIN( 189)		float _this__102 = (((_this__001 * m__101) + (_this__101 * m__111)) + (_this__201 * m__121));
HXDLIN( 189)		float _this__202 = (((_this__001 * m__201) + (_this__101 * m__211)) + (_this__201 * m__221));
HXDLIN( 189)		float _this__012 = (((_this__011 * m__001) + (_this__111 * m__011)) + (_this__211 * m__021));
HXDLIN( 189)		float _this__112 = (((_this__011 * m__101) + (_this__111 * m__111)) + (_this__211 * m__121));
HXDLIN( 189)		float _this__212 = (((_this__011 * m__201) + (_this__111 * m__211)) + (_this__211 * m__221));
HXDLIN( 189)		float _this__022 = (((_this__021 * m__001) + (_this__121 * m__011)) + (_this__221 * m__021));
HXDLIN( 189)		float _this__122 = (((_this__021 * m__101) + (_this__121 * m__111)) + (_this__221 * m__121));
HXDLIN( 189)		float _this__222 = (((_this__021 * m__201) + (_this__121 * m__211)) + (_this__221 * m__221));
HXDLIN( 189)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 189)		float m__002 = (((_this__002 * m->_00) + (_this__102 * m->_01)) + (_this__202 * m->_02));
HXDLIN( 189)		float m__102 = (((_this__002 * m->_10) + (_this__102 * m->_11)) + (_this__202 * m->_12));
HXDLIN( 189)		float m__202 = (((_this__002 * m->_20) + (_this__102 * m->_21)) + (_this__202 * m->_22));
HXDLIN( 189)		float m__012 = (((_this__012 * m->_00) + (_this__112 * m->_01)) + (_this__212 * m->_02));
HXDLIN( 189)		float m__112 = (((_this__012 * m->_10) + (_this__112 * m->_11)) + (_this__212 * m->_12));
HXDLIN( 189)		float m__212 = (((_this__012 * m->_20) + (_this__112 * m->_21)) + (_this__212 * m->_22));
HXDLIN( 189)		float m__022 = (((_this__022 * m->_00) + (_this__122 * m->_01)) + (_this__222 * m->_02));
HXDLIN( 189)		float m__122 = (((_this__022 * m->_10) + (_this__122 * m->_11)) + (_this__222 * m->_12));
HXDLIN( 189)		float m__222 = (((_this__022 * m->_20) + (_this__122 * m->_21)) + (_this__222 * m->_22));
HXDLIN( 189)		_this->_00 = m__002;
HXDLIN( 189)		_this->_10 = m__102;
HXDLIN( 189)		_this->_20 = m__202;
HXDLIN( 189)		_this->_01 = m__012;
HXDLIN( 189)		_this->_11 = m__112;
HXDLIN( 189)		_this->_21 = m__212;
HXDLIN( 189)		_this->_02 = m__022;
HXDLIN( 189)		_this->_12 = m__122;
HXDLIN( 189)		_this->_22 = m__222;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,rotate,(void))

void Graphics_obj::pushRotation(float angle,float centerx,float centery){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_193_pushRotation)
HXDLIN( 193)		float _this__00 = ( (float)(1) );
HXDLIN( 193)		float _this__10 = ( (float)(0) );
HXDLIN( 193)		float _this__20 = centerx;
HXDLIN( 193)		float _this__01 = ( (float)(0) );
HXDLIN( 193)		float _this__11 = ( (float)(1) );
HXDLIN( 193)		float _this__21 = centery;
HXDLIN( 193)		float _this__02 = ( (float)(0) );
HXDLIN( 193)		float _this__12 = ( (float)(0) );
HXDLIN( 193)		float _this__22 = ( (float)(1) );
HXDLIN( 193)		float m__00 = ( (float)(::Math_obj::cos(( (Float)(angle) ))) );
HXDLIN( 193)		float m__10 = ( (float)(-(::Math_obj::sin(( (Float)(angle) )))) );
HXDLIN( 193)		float m__20 = ( (float)(0) );
HXDLIN( 193)		float m__01 = ( (float)(::Math_obj::sin(( (Float)(angle) ))) );
HXDLIN( 193)		float m__11 = ( (float)(::Math_obj::cos(( (Float)(angle) ))) );
HXDLIN( 193)		float m__21 = ( (float)(0) );
HXDLIN( 193)		float m__02 = ( (float)(0) );
HXDLIN( 193)		float m__12 = ( (float)(0) );
HXDLIN( 193)		float m__22 = ( (float)(1) );
HXDLIN( 193)		float _this__001 = (((_this__00 * m__00) + (_this__10 * m__01)) + (_this__20 * m__02));
HXDLIN( 193)		float _this__101 = (((_this__00 * m__10) + (_this__10 * m__11)) + (_this__20 * m__12));
HXDLIN( 193)		float _this__201 = (((_this__00 * m__20) + (_this__10 * m__21)) + (_this__20 * m__22));
HXDLIN( 193)		float _this__011 = (((_this__01 * m__00) + (_this__11 * m__01)) + (_this__21 * m__02));
HXDLIN( 193)		float _this__111 = (((_this__01 * m__10) + (_this__11 * m__11)) + (_this__21 * m__12));
HXDLIN( 193)		float _this__211 = (((_this__01 * m__20) + (_this__11 * m__21)) + (_this__21 * m__22));
HXDLIN( 193)		float _this__021 = (((_this__02 * m__00) + (_this__12 * m__01)) + (_this__22 * m__02));
HXDLIN( 193)		float _this__121 = (((_this__02 * m__10) + (_this__12 * m__11)) + (_this__22 * m__12));
HXDLIN( 193)		float _this__221 = (((_this__02 * m__20) + (_this__12 * m__21)) + (_this__22 * m__22));
HXDLIN( 193)		float m__001 = ( (float)(1) );
HXDLIN( 193)		float m__101 = ( (float)(0) );
HXDLIN( 193)		float m__201 = -(centerx);
HXDLIN( 193)		float m__011 = ( (float)(0) );
HXDLIN( 193)		float m__111 = ( (float)(1) );
HXDLIN( 193)		float m__211 = -(centery);
HXDLIN( 193)		float m__021 = ( (float)(0) );
HXDLIN( 193)		float m__121 = ( (float)(0) );
HXDLIN( 193)		float m__221 = ( (float)(1) );
HXDLIN( 193)		float _this__002 = (((_this__001 * m__001) + (_this__101 * m__011)) + (_this__201 * m__021));
HXDLIN( 193)		float _this__102 = (((_this__001 * m__101) + (_this__101 * m__111)) + (_this__201 * m__121));
HXDLIN( 193)		float _this__202 = (((_this__001 * m__201) + (_this__101 * m__211)) + (_this__201 * m__221));
HXDLIN( 193)		float _this__012 = (((_this__011 * m__001) + (_this__111 * m__011)) + (_this__211 * m__021));
HXDLIN( 193)		float _this__112 = (((_this__011 * m__101) + (_this__111 * m__111)) + (_this__211 * m__121));
HXDLIN( 193)		float _this__212 = (((_this__011 * m__201) + (_this__111 * m__211)) + (_this__211 * m__221));
HXDLIN( 193)		float _this__022 = (((_this__021 * m__001) + (_this__121 * m__011)) + (_this__221 * m__021));
HXDLIN( 193)		float _this__122 = (((_this__021 * m__101) + (_this__121 * m__111)) + (_this__221 * m__121));
HXDLIN( 193)		float _this__222 = (((_this__021 * m__201) + (_this__121 * m__211)) + (_this__221 * m__221));
HXDLIN( 193)		 ::kha::math::FastMatrix3 m = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 193)		float trans__00 = (((_this__002 * m->_00) + (_this__102 * m->_01)) + (_this__202 * m->_02));
HXDLIN( 193)		float trans__10 = (((_this__002 * m->_10) + (_this__102 * m->_11)) + (_this__202 * m->_12));
HXDLIN( 193)		float trans__20 = (((_this__002 * m->_20) + (_this__102 * m->_21)) + (_this__202 * m->_22));
HXDLIN( 193)		float trans__01 = (((_this__012 * m->_00) + (_this__112 * m->_01)) + (_this__212 * m->_02));
HXDLIN( 193)		float trans__11 = (((_this__012 * m->_10) + (_this__112 * m->_11)) + (_this__212 * m->_12));
HXDLIN( 193)		float trans__21 = (((_this__012 * m->_20) + (_this__112 * m->_21)) + (_this__212 * m->_22));
HXDLIN( 193)		float trans__02 = (((_this__022 * m->_00) + (_this__122 * m->_01)) + (_this__222 * m->_02));
HXDLIN( 193)		float trans__12 = (((_this__022 * m->_10) + (_this__122 * m->_11)) + (_this__222 * m->_12));
HXDLIN( 193)		float trans__22 = (((_this__022 * m->_20) + (_this__122 * m->_21)) + (_this__222 * m->_22));
HXDLIN( 193)		this->transformationIndex++;
HXDLIN( 193)		if ((this->transformationIndex == this->transformations->length)) {
HXDLIN( 193)			::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 193)			_hx_tmp->push( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) )));
            		}
HXDLIN( 193)		{
HXDLIN( 193)			 ::kha::math::FastMatrix3 _this = this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 193)			_this->_00 = trans__00;
HXDLIN( 193)			_this->_10 = trans__10;
HXDLIN( 193)			_this->_20 = trans__20;
HXDLIN( 193)			_this->_01 = trans__01;
HXDLIN( 193)			_this->_11 = trans__11;
HXDLIN( 193)			_this->_21 = trans__21;
HXDLIN( 193)			_this->_02 = trans__02;
HXDLIN( 193)			_this->_12 = trans__12;
HXDLIN( 193)			_this->_22 = trans__22;
            		}
HXDLIN( 193)		this->setTransformation(this->transformations->__get(this->transformationIndex).StaticCast<  ::kha::math::FastMatrix3 >());
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,pushRotation,(void))

void Graphics_obj::pushOpacity(Float opacity){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_198_pushOpacity)
HXLINE( 199)		this->setOpacity(opacity);
HXLINE( 200)		this->opacities->push(opacity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,pushOpacity,(void))

Float Graphics_obj::popOpacity(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_203_popOpacity)
HXLINE( 204)		 ::Dynamic ret = this->opacities->pop();
HXLINE( 205)		this->setOpacity(this->get_opacity());
HXLINE( 206)		return ( (Float)(ret) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,popOpacity,return )

Float Graphics_obj::get_opacity(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_210_get_opacity)
HXDLIN( 210)		return this->opacities->__get((this->opacities->length - 1));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_opacity,return )

Float Graphics_obj::set_opacity(Float opacity){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_213_set_opacity)
HXLINE( 214)		this->setOpacity(opacity);
HXLINE( 215)		return (this->opacities[(this->opacities->length - 1)] = opacity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_opacity,return )

void Graphics_obj::scissor(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_218_scissor)
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,scissor,(void))

void Graphics_obj::disableScissor(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_220_disableScissor)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,disableScissor,(void))

 ::kha::graphics4::PipelineState Graphics_obj::get_pipeline(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_228_get_pipeline)
HXDLIN( 228)		return this->pipe;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_pipeline,return )

 ::kha::graphics4::PipelineState Graphics_obj::set_pipeline( ::kha::graphics4::PipelineState pipeline){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_231_set_pipeline)
HXLINE( 232)		this->setPipeline(pipeline);
HXLINE( 233)		return (this->_hx_set_pipe(HX_CTX, pipeline));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_pipeline,return )

void Graphics_obj::setTransformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_252_setTransformation)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setTransformation,(void))

void Graphics_obj::setOpacity(Float opacity){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_254_setOpacity)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setOpacity,(void))

void Graphics_obj::setPipeline( ::kha::graphics4::PipelineState pipeline){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_256_setPipeline)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setPipeline,(void))

::Array< int > Graphics_obj::fontGlyphs;


::hx::ObjectPtr< Graphics_obj > Graphics_obj::__new() {
	::hx::ObjectPtr< Graphics_obj > __this = new Graphics_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Graphics_obj > Graphics_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Graphics_obj *__this = (Graphics_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Graphics_obj), true, "kha.graphics2.Graphics"));
	*(void **)__this = Graphics_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Graphics_obj::Graphics_obj()
{
}

void Graphics_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics);
	HX_MARK_MEMBER_NAME(pipe,"pipe");
	HX_MARK_MEMBER_NAME(transformations,"transformations");
	HX_MARK_MEMBER_NAME(transformationIndex,"transformationIndex");
	HX_MARK_MEMBER_NAME(opacities,"opacities");
	HX_MARK_MEMBER_NAME(myFontSize,"myFontSize");
	HX_MARK_END_CLASS();
}

void Graphics_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pipe,"pipe");
	HX_VISIT_MEMBER_NAME(transformations,"transformations");
	HX_VISIT_MEMBER_NAME(transformationIndex,"transformationIndex");
	HX_VISIT_MEMBER_NAME(opacities,"opacities");
	HX_VISIT_MEMBER_NAME(myFontSize,"myFontSize");
}

::hx::Val Graphics_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return ::hx::Val( end_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_font() ); }
		if (HX_FIELD_EQ(inName,"pipe") ) { return ::hx::Val( pipe ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return ::hx::Val( begin_dyn() ); }
		if (HX_FIELD_EQ(inName,"flush") ) { return ::hx::Val( flush_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_color() ); }
		if (HX_FIELD_EQ(inName,"scale") ) { return ::hx::Val( scale_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rotate") ) { return ::hx::Val( rotate_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_opacity() ); }
		if (HX_FIELD_EQ(inName,"scissor") ) { return ::hx::Val( scissor_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return ::hx::Val( drawRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"fillRect") ) { return ::hx::Val( fillRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawLine") ) { return ::hx::Val( drawLine_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_font") ) { return ::hx::Val( get_font_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_font") ) { return ::hx::Val( set_font_dyn() ); }
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_fontSize() ); }
		if (HX_FIELD_EQ(inName,"rotation") ) { return ::hx::Val( rotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"pipeline") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_pipeline() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"drawImage") ) { return ::hx::Val( drawImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawVideo") ) { return ::hx::Val( drawVideo_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_color") ) { return ::hx::Val( get_color_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_color") ) { return ::hx::Val( set_color_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushScale") ) { return ::hx::Val( pushScale_dyn() ); }
		if (HX_FIELD_EQ(inName,"translate") ) { return ::hx::Val( translate_dyn() ); }
		if (HX_FIELD_EQ(inName,"opacities") ) { return ::hx::Val( opacities ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawString") ) { return ::hx::Val( drawString_dyn() ); }
		if (HX_FIELD_EQ(inName,"popOpacity") ) { return ::hx::Val( popOpacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"myFontSize") ) { return ::hx::Val( myFontSize ); }
		if (HX_FIELD_EQ(inName,"setOpacity") ) { return ::hx::Val( setOpacity_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"translation") ) { return ::hx::Val( translation_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushOpacity") ) { return ::hx::Val( pushOpacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_opacity") ) { return ::hx::Val( get_opacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_opacity") ) { return ::hx::Val( set_opacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPipeline") ) { return ::hx::Val( setPipeline_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"drawSubImage") ) { return ::hx::Val( drawSubImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"fillTriangle") ) { return ::hx::Val( fillTriangle_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_fontSize") ) { return ::hx::Val( get_fontSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_fontSize") ) { return ::hx::Val( set_fontSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushRotation") ) { return ::hx::Val( pushRotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_pipeline") ) { return ::hx::Val( get_pipeline_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pipeline") ) { return ::hx::Val( set_pipeline_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"drawCharacters") ) { return ::hx::Val( drawCharacters_dyn() ); }
		if (HX_FIELD_EQ(inName,"transformation") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_transformation() ); }
		if (HX_FIELD_EQ(inName,"disableScissor") ) { return ::hx::Val( disableScissor_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"drawScaledImage") ) { return ::hx::Val( drawScaledImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushTranslation") ) { return ::hx::Val( pushTranslation_dyn() ); }
		if (HX_FIELD_EQ(inName,"transformations") ) { return ::hx::Val( transformations ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"imageScaleQuality") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_imageScaleQuality() ); }
		if (HX_FIELD_EQ(inName,"popTransformation") ) { return ::hx::Val( popTransformation_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTransformation") ) { return ::hx::Val( setTransformation_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"drawScaledSubImage") ) { return ::hx::Val( drawScaledSubImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"mipmapScaleQuality") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_mipmapScaleQuality() ); }
		if (HX_FIELD_EQ(inName,"get_transformation") ) { return ::hx::Val( get_transformation_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_transformation") ) { return ::hx::Val( set_transformation_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushTransformation") ) { return ::hx::Val( pushTransformation_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"transformationIndex") ) { return ::hx::Val( transformationIndex ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_imageScaleQuality") ) { return ::hx::Val( get_imageScaleQuality_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_imageScaleQuality") ) { return ::hx::Val( set_imageScaleQuality_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"get_mipmapScaleQuality") ) { return ::hx::Val( get_mipmapScaleQuality_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_mipmapScaleQuality") ) { return ::hx::Val( set_mipmapScaleQuality_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Graphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fontGlyphs") ) { outValue = ( fontGlyphs ); return true; }
	}
	return false;
}

::hx::Val Graphics_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_font(inValue.Cast<  ::kha::Kravur >()) ); }
		if (HX_FIELD_EQ(inName,"pipe") ) { _hx_set_pipe(HX_CTX_GET,inValue.Cast<  ::kha::graphics4::PipelineState >()); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_color(inValue.Cast< int >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_opacity(inValue.Cast< Float >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_fontSize(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"pipeline") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_pipeline(inValue.Cast<  ::kha::graphics4::PipelineState >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"opacities") ) { _hx_set_opacities(HX_CTX_GET,inValue.Cast< ::Array< Float > >()); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"myFontSize") ) { myFontSize=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"transformation") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_transformation(inValue.Cast<  ::kha::math::FastMatrix3 >()) ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"transformations") ) { _hx_set_transformations(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"imageScaleQuality") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_imageScaleQuality(inValue.Cast< int >()) ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"mipmapScaleQuality") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_mipmapScaleQuality(inValue.Cast< int >()) ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"transformationIndex") ) { transformationIndex=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Graphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fontGlyphs") ) { fontGlyphs=ioValue.Cast< ::Array< int > >(); return true; }
	}
	return false;
}

void Graphics_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("imageScaleQuality",50,2b,30,75));
	outFields->push(HX_("mipmapScaleQuality",fd,48,4e,0a));
	outFields->push(HX_("color",63,71,5c,4a));
	outFields->push(HX_("font",cf,5d,c0,43));
	outFields->push(HX_("fontSize",30,be,d1,ce));
	outFields->push(HX_("transformation",c9,bd,2f,0a));
	outFields->push(HX_("opacity",cb,5d,65,eb));
	outFields->push(HX_("pipe",2e,f4,57,4a));
	outFields->push(HX_("pipeline",22,bb,83,4b));
	outFields->push(HX_("transformations",8a,52,96,df));
	outFields->push(HX_("transformationIndex",89,b4,a0,cd));
	outFields->push(HX_("opacities",e9,da,c4,95));
	outFields->push(HX_("myFontSize",bc,25,53,3c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Graphics_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::kha::graphics4::PipelineState */ ,(int)offsetof(Graphics_obj,pipe),HX_("pipe",2e,f4,57,4a)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Graphics_obj,transformations),HX_("transformations",8a,52,96,df)},
	{::hx::fsInt,(int)offsetof(Graphics_obj,transformationIndex),HX_("transformationIndex",89,b4,a0,cd)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Graphics_obj,opacities),HX_("opacities",e9,da,c4,95)},
	{::hx::fsInt,(int)offsetof(Graphics_obj,myFontSize),HX_("myFontSize",bc,25,53,3c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo Graphics_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< int > */ ,(void *) &Graphics_obj::fontGlyphs,HX_("fontGlyphs",76,90,ac,62)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String Graphics_obj_sMemberFields[] = {
	HX_("begin",29,ea,55,b0),
	HX_("end",db,03,4d,00),
	HX_("flush",c4,62,9b,02),
	HX_("clear",8d,71,5b,48),
	HX_("drawImage",b7,54,74,85),
	HX_("drawSubImage",df,01,7c,08),
	HX_("drawScaledImage",bd,98,4d,c9),
	HX_("drawScaledSubImage",99,85,bc,e8),
	HX_("drawRect",48,f7,10,60),
	HX_("fillRect",47,45,b9,6c),
	HX_("drawString",f5,a3,f3,52),
	HX_("drawCharacters",ce,35,d8,38),
	HX_("drawLine",18,c2,1c,5c),
	HX_("drawVideo",d7,49,07,ff),
	HX_("fillTriangle",6b,04,3a,92),
	HX_("get_imageScaleQuality",27,2e,de,f3),
	HX_("set_imageScaleQuality",33,fc,e6,47),
	HX_("get_mipmapScaleQuality",46,c2,e2,63),
	HX_("set_mipmapScaleQuality",ba,3e,8e,97),
	HX_("get_color",ba,cd,05,8e),
	HX_("set_color",c6,b9,56,71),
	HX_("get_font",58,19,7b,c3),
	HX_("set_font",cc,72,d8,71),
	HX_("get_fontSize",39,72,eb,83),
	HX_("set_fontSize",ad,95,e4,98),
	HX_("get_transformation",92,9e,c9,a5),
	HX_("set_transformation",06,d1,78,82),
	HX_("pushTransformation",43,2d,88,9a),
	HX_("popTransformation",3a,eb,28,8b),
	HX_("scale",8a,ce,ce,78),
	HX_("pushScale",50,36,ea,bc),
	HX_("translation",f1,30,a2,8a),
	HX_("translate",4e,d7,7f,49),
	HX_("pushTranslation",37,b1,5e,a1),
	HX_("rotation",3e,3d,86,08),
	HX_("rotate",5b,46,20,cb),
	HX_("pushRotation",38,75,25,9f),
	HX_("pushOpacity",11,c3,fe,fa),
	HX_("popOpacity",3a,6c,09,56),
	HX_("get_opacity",e2,bd,5f,71),
	HX_("set_opacity",ee,c4,cc,7b),
	HX_("scissor",1c,28,e7,04),
	HX_("disableScissor",14,73,66,02),
	HX_("pipe",2e,f4,57,4a),
	HX_("get_pipeline",2b,6f,9d,00),
	HX_("set_pipeline",9f,92,96,15),
	HX_("transformations",8a,52,96,df),
	HX_("transformationIndex",89,b4,a0,cd),
	HX_("opacities",e9,da,c4,95),
	HX_("myFontSize",bc,25,53,3c),
	HX_("setTransformation",0b,45,11,a0),
	HX_("setOpacity",49,82,44,3e),
	HX_("setPipeline",e4,84,e4,7b),
	::String(null()) };

static void Graphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Graphics_obj::fontGlyphs,"fontGlyphs");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Graphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Graphics_obj::fontGlyphs,"fontGlyphs");
};

#endif

::hx::Class Graphics_obj::__mClass;

static ::String Graphics_obj_sStaticFields[] = {
	HX_("fontGlyphs",76,90,ac,62),
	::String(null())
};

void Graphics_obj::__register()
{
	Graphics_obj _hx_dummy;
	Graphics_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.graphics2.Graphics",3c,bf,49,32);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Graphics_obj::__GetStatic;
	__mClass->mSetStaticField = &Graphics_obj::__SetStatic;
	__mClass->mMarkFunc = Graphics_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Graphics_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Graphics_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Graphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Graphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Graphics_obj::__boot()
{
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		::Array< int > _hx_run(){
            			HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_128_boot)
HXDLIN( 128)			::Array< int > _g = ::Array_obj< int >::__new(0);
HXDLIN( 128)			{
HXDLIN( 128)				int _g1 = 32;
HXDLIN( 128)				while((_g1 < 256)){
HXDLIN( 128)					_g1 = (_g1 + 1);
HXDLIN( 128)					int i = (_g1 - 1);
HXDLIN( 128)					_g->push(i);
            				}
            			}
HXDLIN( 128)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_128_boot)
HXDLIN( 128)		fontGlyphs = ( (::Array< int >)( ::Dynamic(new _hx_Closure_0())()) );
            	}
}

} // end namespace kha
} // end namespace graphics2
