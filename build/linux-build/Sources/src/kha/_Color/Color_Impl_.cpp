// Generated by Haxe 4.3.0+fa3f709
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_kha__Color_Color_Impl_
#include <hxinc/kha/_Color/Color_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_25_fromValue,"kha._Color.Color_Impl_","fromValue",0xdaee86bc,"kha._Color.Color_Impl_.fromValue","kha/Color.hx",25,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_32_fromBytes,"kha._Color.Color_Impl_","fromBytes",0x66ce0fb6,"kha._Color.Color_Impl_.fromBytes","kha/Color.hx",32,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_39_fromFloats,"kha._Color.Color_Impl_","fromFloats",0xa7667dac,"kha._Color.Color_Impl_.fromFloats","kha/Color.hx",39,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_45_fromString,"kha._Color.Color_Impl_","fromString",0x77408326,"kha._Color.Color_Impl_.fromString","kha/Color.hx",45,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_102__new,"kha._Color.Color_Impl_","_new",0x1251106c,"kha._Color.Color_Impl_._new","kha/Color.hx",102,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_112_get_value,"kha._Color.Color_Impl_","get_value",0x6a0ef8dd,"kha._Color.Color_Impl_.get_value","kha/Color.hx",112,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_115_set_value,"kha._Color.Color_Impl_","set_value",0x4d5fe4e9,"kha._Color.Color_Impl_.set_value","kha/Color.hx",115,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_121_get_Rb,"kha._Color.Color_Impl_","get_Rb",0x231ef2e4,"kha._Color.Color_Impl_.get_Rb","kha/Color.hx",121,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_125_get_Gb,"kha._Color.Color_Impl_","get_Gb",0x231ee94f,"kha._Color.Color_Impl_.get_Gb","kha/Color.hx",125,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_129_get_Bb,"kha._Color.Color_Impl_","get_Bb",0x231ee4f4,"kha._Color.Color_Impl_.get_Bb","kha/Color.hx",129,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_133_get_Ab,"kha._Color.Color_Impl_","get_Ab",0x231ee415,"kha._Color.Color_Impl_.get_Ab","kha/Color.hx",133,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_136_set_Rb,"kha._Color.Color_Impl_","set_Rb",0xef674758,"kha._Color.Color_Impl_.set_Rb","kha/Color.hx",136,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_141_set_Gb,"kha._Color.Color_Impl_","set_Gb",0xef673dc3,"kha._Color.Color_Impl_.set_Gb","kha/Color.hx",141,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_146_set_Bb,"kha._Color.Color_Impl_","set_Bb",0xef673968,"kha._Color.Color_Impl_.set_Bb","kha/Color.hx",146,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_151_set_Ab,"kha._Color.Color_Impl_","set_Ab",0xef673889,"kha._Color.Color_Impl_.set_Ab","kha/Color.hx",151,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_157_get_R,"kha._Color.Color_Impl_","get_R",0x89ea53be,"kha._Color.Color_Impl_.get_R","kha/Color.hx",157,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_161_get_G,"kha._Color.Color_Impl_","get_G",0x89ea53b3,"kha._Color.Color_Impl_.get_G","kha/Color.hx",161,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_165_get_B,"kha._Color.Color_Impl_","get_B",0x89ea53ae,"kha._Color.Color_Impl_.get_B","kha/Color.hx",165,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_169_get_A,"kha._Color.Color_Impl_","get_A",0x89ea53ad,"kha._Color.Color_Impl_.get_A","kha/Color.hx",169,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_172_set_R,"kha._Color.Color_Impl_","set_R",0x72b949ca,"kha._Color.Color_Impl_.set_R","kha/Color.hx",172,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_177_set_G,"kha._Color.Color_Impl_","set_G",0x72b949bf,"kha._Color.Color_Impl_.set_G","kha/Color.hx",177,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_182_set_B,"kha._Color.Color_Impl_","set_B",0x72b949ba,"kha._Color.Color_Impl_.set_B","kha/Color.hx",182,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_187_set_A,"kha._Color.Color_Impl_","set_A",0x72b949b9,"kha._Color.Color_Impl_.set_A","kha/Color.hx",187,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_7_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",7,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_8_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",8,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_9_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",9,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_10_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",10,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_11_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",11,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_12_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",12,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_13_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",13,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_14_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",14,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_15_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",15,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_16_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",16,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_17_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",17,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_18_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",18,0xcf6d63e6)
HX_LOCAL_STACK_FRAME(_hx_pos_d2f5d32ec190c5d3_19_boot,"kha._Color.Color_Impl_","boot",0x144d7f3d,"kha._Color.Color_Impl_.boot","kha/Color.hx",19,0xcf6d63e6)
namespace kha{
namespace _Color{

void Color_Impl__obj::__construct() { }

Dynamic Color_Impl__obj::__CreateEmpty() { return new Color_Impl__obj; }

void *Color_Impl__obj::_hx_vtable = 0;

Dynamic Color_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Color_Impl__obj > _hx_result = new Color_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Color_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1fe64883;
}

int Color_Impl__obj::Black;

int Color_Impl__obj::White;

int Color_Impl__obj::Red;

int Color_Impl__obj::Blue;

int Color_Impl__obj::Green;

int Color_Impl__obj::Magenta;

int Color_Impl__obj::Yellow;

int Color_Impl__obj::Cyan;

int Color_Impl__obj::Purple;

int Color_Impl__obj::Pink;

int Color_Impl__obj::Orange;

int Color_Impl__obj::Transparent;

float Color_Impl__obj::invMaxChannelValue;

int Color_Impl__obj::fromValue(int value){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_25_fromValue)
HXDLIN(  25)		return ::kha::_Color::Color_Impl__obj::_new(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,fromValue,return )

int Color_Impl__obj::fromBytes(int r,int g,int b,::hx::Null< int >  __o_a){
            		int a = __o_a.Default(255);
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_32_fromBytes)
HXDLIN(  32)		return ::kha::_Color::Color_Impl__obj::_new(((((a << 24) | (r << 16)) | (g << 8)) | b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,fromBytes,return )

int Color_Impl__obj::fromFloats(float r,float g,float b,::hx::Null< float >  __o_a){
            		float a = __o_a.Default(1);
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_39_fromFloats)
HXDLIN(  39)		int _hx_tmp = (::Std_obj::_hx_int(( (Float)((a * ( (float)(255) ))) )) << 24);
HXDLIN(  39)		int _hx_tmp1 = (_hx_tmp | (::Std_obj::_hx_int(( (Float)((r * ( (float)(255) ))) )) << 16));
HXDLIN(  39)		int _hx_tmp2 = (_hx_tmp1 | (::Std_obj::_hx_int(( (Float)((g * ( (float)(255) ))) )) << 8));
HXDLIN(  39)		return ::kha::_Color::Color_Impl__obj::_new((_hx_tmp2 | ::Std_obj::_hx_int(( (Float)((b * ( (float)(255) ))) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,fromFloats,return )

int Color_Impl__obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_45_fromString)
HXLINE(  46)		bool _hx_tmp;
HXDLIN(  46)		bool _hx_tmp1;
HXDLIN(  46)		bool _hx_tmp2;
HXDLIN(  46)		if ((value.length != 4)) {
HXLINE(  46)			_hx_tmp2 = (value.length == 7);
            		}
            		else {
HXLINE(  46)			_hx_tmp2 = true;
            		}
HXDLIN(  46)		if (!(_hx_tmp2)) {
HXLINE(  46)			_hx_tmp1 = (value.length == 9);
            		}
            		else {
HXLINE(  46)			_hx_tmp1 = true;
            		}
HXDLIN(  46)		if (_hx_tmp1) {
HXLINE(  46)			_hx_tmp = (value.cca(0) != 35);
            		}
            		else {
HXLINE(  46)			_hx_tmp = true;
            		}
HXDLIN(  46)		if (_hx_tmp) {
HXLINE(  47)			HX_STACK_DO_THROW((HX_("Invalid Color string: ",5d,2f,45,7f) + value));
            		}
HXLINE(  49)		if ((value.length == 4)) {
HXLINE(  50)			::String r = value.charAt(1);
HXLINE(  51)			::String g = value.charAt(2);
HXLINE(  52)			::String b = value.charAt(3);
HXLINE(  53)			value = ((((((HX_("#",23,00,00,00) + r) + r) + g) + g) + b) + b);
            		}
HXLINE(  55)		 ::Dynamic colorValue = ::Std_obj::parseInt((HX_("0x",48,2a,00,00) + value.substr(1,null())));
HXLINE(  56)		if ((value.length == 7)) {
HXLINE(  57)			colorValue = (colorValue + -16777216);
            		}
HXLINE(  59)		return ::kha::_Color::Color_Impl__obj::_new((( (int)(colorValue) ) | 0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,fromString,return )

int Color_Impl__obj::_new(int value){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_102__new)
HXDLIN( 102)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,_new,return )

int Color_Impl__obj::get_value(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_112_get_value)
HXDLIN( 112)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_value,return )

int Color_Impl__obj::set_value(int this1,int value){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_115_set_value)
HXLINE( 116)		this1 = value;
HXLINE( 117)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_value,return )

int Color_Impl__obj::get_Rb(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_121_get_Rb)
HXDLIN( 121)		return ::hx::UShr((this1 & 16711680),16);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_Rb,return )

int Color_Impl__obj::get_Gb(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_125_get_Gb)
HXDLIN( 125)		return ::hx::UShr((this1 & 65280),8);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_Gb,return )

int Color_Impl__obj::get_Bb(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_129_get_Bb)
HXDLIN( 129)		return (this1 & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_Bb,return )

int Color_Impl__obj::get_Ab(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_133_get_Ab)
HXDLIN( 133)		return ::hx::UShr(this1,24);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_Ab,return )

int Color_Impl__obj::set_Rb(int this1,int i){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_136_set_Rb)
HXLINE( 137)		this1 = ((((::hx::UShr(this1,24) << 24) | (i << 16)) | (::hx::UShr((this1 & 65280),8) << 8)) | (this1 & 255));
HXLINE( 138)		return i;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_Rb,return )

int Color_Impl__obj::set_Gb(int this1,int i){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_141_set_Gb)
HXLINE( 142)		this1 = ((((::hx::UShr(this1,24) << 24) | (::hx::UShr((this1 & 16711680),16) << 16)) | (i << 8)) | (this1 & 255));
HXLINE( 143)		return i;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_Gb,return )

int Color_Impl__obj::set_Bb(int this1,int i){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_146_set_Bb)
HXLINE( 147)		this1 = ((((::hx::UShr(this1,24) << 24) | (::hx::UShr((this1 & 16711680),16) << 16)) | (::hx::UShr((this1 & 65280),8) << 8)) | i);
HXLINE( 148)		return i;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_Bb,return )

int Color_Impl__obj::set_Ab(int this1,int i){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_151_set_Ab)
HXLINE( 152)		this1 = ((((i << 24) | (::hx::UShr((this1 & 16711680),16) << 16)) | (::hx::UShr((this1 & 65280),8) << 8)) | (this1 & 255));
HXLINE( 153)		return i;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_Ab,return )

float Color_Impl__obj::get_R(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_157_get_R)
HXDLIN( 157)		return (( (float)(::hx::UShr((this1 & 16711680),16)) ) * ( (float)(((Float)0.00392156862745098)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_R,return )

float Color_Impl__obj::get_G(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_161_get_G)
HXDLIN( 161)		return (( (float)(::hx::UShr((this1 & 65280),8)) ) * ( (float)(((Float)0.00392156862745098)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_G,return )

float Color_Impl__obj::get_B(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_165_get_B)
HXDLIN( 165)		return (( (float)((this1 & 255)) ) * ( (float)(((Float)0.00392156862745098)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_B,return )

float Color_Impl__obj::get_A(int this1){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_169_get_A)
HXDLIN( 169)		return (( (float)(::hx::UShr(this1,24)) ) * ( (float)(((Float)0.00392156862745098)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_A,return )

float Color_Impl__obj::set_R(int this1,float f){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_172_set_R)
HXLINE( 173)		int this2 = (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr(this1,24)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 24);
HXDLIN( 173)		int this3 = (this2 | (::Std_obj::_hx_int(( (Float)((f * ( (float)(255) ))) )) << 16));
HXDLIN( 173)		int this4 = (this3 | (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr((this1 & 65280),8)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 8));
HXDLIN( 173)		this1 = (this4 | ::Std_obj::_hx_int(( (Float)(((( (float)((this1 & 255)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )));
HXLINE( 174)		return f;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_R,return )

float Color_Impl__obj::set_G(int this1,float f){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_177_set_G)
HXLINE( 178)		int this2 = (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr(this1,24)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 24);
HXDLIN( 178)		int this3 = (this2 | (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr((this1 & 16711680),16)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 16));
HXDLIN( 178)		int this4 = (this3 | (::Std_obj::_hx_int(( (Float)((f * ( (float)(255) ))) )) << 8));
HXDLIN( 178)		this1 = (this4 | ::Std_obj::_hx_int(( (Float)(((( (float)((this1 & 255)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )));
HXLINE( 179)		return f;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_G,return )

float Color_Impl__obj::set_B(int this1,float f){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_182_set_B)
HXLINE( 183)		int this2 = (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr(this1,24)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 24);
HXDLIN( 183)		int this3 = (this2 | (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr((this1 & 16711680),16)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 16));
HXDLIN( 183)		int this4 = (this3 | (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr((this1 & 65280),8)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 8));
HXDLIN( 183)		this1 = (this4 | ::Std_obj::_hx_int(( (Float)((f * ( (float)(255) ))) )));
HXLINE( 184)		return f;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_B,return )

float Color_Impl__obj::set_A(int this1,float f){
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_187_set_A)
HXLINE( 188)		int this2 = (::Std_obj::_hx_int(( (Float)((f * ( (float)(255) ))) )) << 24);
HXDLIN( 188)		int this3 = (this2 | (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr((this1 & 16711680),16)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 16));
HXDLIN( 188)		int this4 = (this3 | (::Std_obj::_hx_int(( (Float)(((( (float)(::hx::UShr((this1 & 65280),8)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )) << 8));
HXDLIN( 188)		this1 = (this4 | ::Std_obj::_hx_int(( (Float)(((( (float)((this1 & 255)) ) * ( (float)(((Float)0.00392156862745098)) )) * ( (float)(255) ))) )));
HXLINE( 189)		return f;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_A,return )


Color_Impl__obj::Color_Impl__obj()
{
}

bool Color_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_R") ) { outValue = get_R_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_G") ) { outValue = get_G_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_B") ) { outValue = get_B_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_A") ) { outValue = get_A_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_R") ) { outValue = set_R_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_G") ) { outValue = set_G_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_B") ) { outValue = set_B_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_A") ) { outValue = set_A_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_Rb") ) { outValue = get_Rb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_Gb") ) { outValue = get_Gb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_Bb") ) { outValue = get_Bb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_Ab") ) { outValue = get_Ab_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_Rb") ) { outValue = set_Rb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_Gb") ) { outValue = set_Gb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_Bb") ) { outValue = set_Bb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_Ab") ) { outValue = set_Ab_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromValue") ) { outValue = fromValue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_value") ) { outValue = get_value_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_value") ) { outValue = set_value_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromFloats") ) { outValue = fromFloats_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Color_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Color_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &Color_Impl__obj::Black,HX_("Black",9f,45,1f,48)},
	{::hx::fsInt,(void *) &Color_Impl__obj::White,HX_("White",89,ba,ea,5c)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Red,HX_("Red",31,91,3e,00)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Blue,HX_("Blue",ba,6e,f2,2b)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Green,HX_("Green",a3,7e,1a,2d)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Magenta,HX_("Magenta",09,e2,ee,db)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Yellow,HX_("Yellow",94,13,f1,04)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Cyan,HX_("Cyan",43,71,a5,2c)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Purple,HX_("Purple",5c,6a,1e,a6)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Pink,HX_("Pink",96,1e,31,35)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Orange,HX_("Orange",0e,27,51,7a)},
	{::hx::fsInt,(void *) &Color_Impl__obj::Transparent,HX_("Transparent",32,c3,ec,06)},
	{::hx::fsUnknown /* float */ ,(void *) &Color_Impl__obj::invMaxChannelValue,HX_("invMaxChannelValue",81,3a,08,e4)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Color_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Black,"Black");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::White,"White");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Red,"Red");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Blue,"Blue");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Green,"Green");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Magenta,"Magenta");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Yellow,"Yellow");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Cyan,"Cyan");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Purple,"Purple");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Pink,"Pink");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Orange,"Orange");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::Transparent,"Transparent");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::invMaxChannelValue,"invMaxChannelValue");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Color_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Black,"Black");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::White,"White");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Red,"Red");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Blue,"Blue");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Green,"Green");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Magenta,"Magenta");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Yellow,"Yellow");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Cyan,"Cyan");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Purple,"Purple");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Pink,"Pink");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Orange,"Orange");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::Transparent,"Transparent");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::invMaxChannelValue,"invMaxChannelValue");
};

#endif

::hx::Class Color_Impl__obj::__mClass;

static ::String Color_Impl__obj_sStaticFields[] = {
	HX_("Black",9f,45,1f,48),
	HX_("White",89,ba,ea,5c),
	HX_("Red",31,91,3e,00),
	HX_("Blue",ba,6e,f2,2b),
	HX_("Green",a3,7e,1a,2d),
	HX_("Magenta",09,e2,ee,db),
	HX_("Yellow",94,13,f1,04),
	HX_("Cyan",43,71,a5,2c),
	HX_("Purple",5c,6a,1e,a6),
	HX_("Pink",96,1e,31,35),
	HX_("Orange",0e,27,51,7a),
	HX_("Transparent",32,c3,ec,06),
	HX_("invMaxChannelValue",81,3a,08,e4),
	HX_("fromValue",a7,69,41,e6),
	HX_("fromBytes",a1,f2,20,72),
	HX_("fromFloats",61,28,9a,84),
	HX_("fromString",db,2d,74,54),
	HX_("_new",61,15,1f,3f),
	HX_("get_value",c8,db,61,75),
	HX_("set_value",d4,c7,b2,58),
	HX_("get_Rb",19,df,2f,a3),
	HX_("get_Gb",84,d5,2f,a3),
	HX_("get_Bb",29,d1,2f,a3),
	HX_("get_Ab",4a,d0,2f,a3),
	HX_("set_Rb",8d,33,78,6f),
	HX_("set_Gb",f8,29,78,6f),
	HX_("set_Bb",9d,25,78,6f),
	HX_("set_Ab",be,24,78,6f),
	HX_("get_R",29,a5,60,91),
	HX_("get_G",1e,a5,60,91),
	HX_("get_B",19,a5,60,91),
	HX_("get_A",18,a5,60,91),
	HX_("set_R",35,9b,2f,7a),
	HX_("set_G",2a,9b,2f,7a),
	HX_("set_B",25,9b,2f,7a),
	HX_("set_A",24,9b,2f,7a),
	::String(null())
};

void Color_Impl__obj::__register()
{
	Color_Impl__obj _hx_dummy;
	Color_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha._Color.Color_Impl_",43,41,5a,bf);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Color_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Color_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Color_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Color_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Color_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Color_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Color_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Color_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_7_boot)
HXDLIN(   7)		Black = -16777216;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_8_boot)
HXDLIN(   8)		White = -1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_9_boot)
HXDLIN(   9)		Red = -65536;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_10_boot)
HXDLIN(  10)		Blue = -16776961;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_11_boot)
HXDLIN(  11)		Green = -16711936;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_12_boot)
HXDLIN(  12)		Magenta = -65281;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_13_boot)
HXDLIN(  13)		Yellow = -256;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_14_boot)
HXDLIN(  14)		Cyan = -16711681;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_15_boot)
HXDLIN(  15)		Purple = -8388480;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_16_boot)
HXDLIN(  16)		Pink = -16181;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_17_boot)
HXDLIN(  17)		Orange = -23296;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_18_boot)
HXDLIN(  18)		Transparent = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d2f5d32ec190c5d3_19_boot)
HXDLIN(  19)		invMaxChannelValue = ( (float)(((Float)0.00392156862745098)) );
            	}
}

} // end namespace kha
} // end namespace _Color
