// Generated by Haxe 4.3.0+fa3f709
#include <hxcpp.h>

#ifndef INCLUDED_3fe8139d5204232b
#define INCLUDED_3fe8139d5204232b
#include "cpp_bytearray.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Shaders
#include <hxinc/kha/Shaders.h>
#endif
#ifndef INCLUDED_kha__Assets_ImageList
#include <hxinc/kha/_Assets/ImageList.h>
#endif
#ifndef INCLUDED_kha_arrays_ByteArrayPrivate
#include <hxinc/kha/arrays/ByteArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_graphics4_ConstantLocation
#include <hxinc/kha/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_graphics4_FragmentShader
#include <hxinc/kha/graphics4/FragmentShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <hxinc/kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_IndexBuffer
#include <hxinc/kha/graphics4/IndexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <hxinc/kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <hxinc/kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureUnit
#include <hxinc/kha/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexBuffer
#include <hxinc/kha/graphics4/VertexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexShader
#include <hxinc/kha/graphics4/VertexShader.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexStructure
#include <hxinc/kha/graphics4/VertexStructure.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <hxinc/kha/math/FastMatrix4.h>
#endif
#ifndef INCLUDED_pipelines_TextureCubePipeline
#include <hxinc/pipelines/TextureCubePipeline.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bb55e2d660c8a8e3_105_new,"pipelines.TextureCubePipeline","new",0xfad9a027,"pipelines.TextureCubePipeline.new","pipelines/TextureCubePipeline.hx",105,0x3342a9ea)
HX_LOCAL_STACK_FRAME(_hx_pos_bb55e2d660c8a8e3_323_render,"pipelines.TextureCubePipeline","render",0x027871ef,"pipelines.TextureCubePipeline.render","pipelines/TextureCubePipeline.hx",323,0x3342a9ea)
static const ::String _hx_array_data_cd1700b5_8[] = {
	HX_("ambient",18,98,81,09),HX_("position",a9,a0,fa,ca),HX_("specular",c3,56,6c,93),HX_("diffuse",62,61,7f,38),HX_("constant",64,c1,9d,a5),HX_("linear",e5,51,a0,ec),HX_("quadratic",d8,ca,13,e2),
};
HX_LOCAL_STACK_FRAME(_hx_pos_bb55e2d660c8a8e3_189_boot,"pipelines.TextureCubePipeline","boot",0x7bab828b,"pipelines.TextureCubePipeline.boot","pipelines/TextureCubePipeline.hx",189,0x3342a9ea)
static const Float _hx_array_data_cd1700b5_10[] = {
	0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_bb55e2d660c8a8e3_150_boot,"pipelines.TextureCubePipeline","boot",0x7bab828b,"pipelines.TextureCubePipeline.boot","pipelines/TextureCubePipeline.hx",150,0x3342a9ea)
static const Float _hx_array_data_cd1700b5_12[] = {
	0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_bb55e2d660c8a8e3_106_boot,"pipelines.TextureCubePipeline","boot",0x7bab828b,"pipelines.TextureCubePipeline.boot","pipelines/TextureCubePipeline.hx",106,0x3342a9ea)
static const Float _hx_array_data_cd1700b5_14[] = {
	-0.5,-0.5,-0.5,0.5,-0.5,-0.5,0.5,0.5,-0.5,0.5,0.5,-0.5,-0.5,0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,0.5,0.5,-0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,-0.5,0.5,0.5,-0.5,-0.5,0.5,-0.5,0.5,0.5,-0.5,0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,0.5,-0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5,0.5,0.5,0.5,0.5,-0.5,-0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5,0.5,0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5,-0.5,-0.5,-0.5,0.5,-0.5,0.5,0.5,-0.5,0.5,0.5,0.5,0.5,0.5,0.5,-0.5,0.5,0.5,-0.5,0.5,-0.5,
};
namespace pipelines{

void TextureCubePipeline_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_bb55e2d660c8a8e3_105_new)
HXLINE( 228)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE( 229)		structure->add(HX_("aPos",b3,c7,5a,40),2);
HXLINE( 230)		structure->add(HX_("aNormal",68,e5,9f,26),2);
HXLINE( 231)		structure->add(HX_("aTexCoords",c4,a8,7d,1f),1);
HXLINE( 233)		int structureLength = 8;
HXLINE( 235)		this->_hx_set_pipeline(HX_CTX,  ::kha::graphics4::PipelineState_obj::__alloc( HX_CTX ));
HXLINE( 236)		this->pipeline->_hx_set_inputLayout(HX_CTX, ::Array_obj< ::Dynamic>::__new(1)->init(0,structure));
HXLINE( 237)		this->pipeline->_hx_set_vertexShader(HX_CTX, ::kha::Shaders_obj::cube_vert);
HXLINE( 238)		this->pipeline->_hx_set_fragmentShader(HX_CTX, ::kha::Shaders_obj::cube_frag);
HXLINE( 240)		this->pipeline->depthWrite = true;
HXLINE( 241)		this->pipeline->depthMode = 4;
HXLINE( 242)		this->pipeline->colorAttachmentCount = 1;
HXLINE( 243)		this->pipeline->colorAttachments[0] = 0;
HXLINE( 244)		this->pipeline->depthStencilAttachment = 5;
HXLINE( 245)		this->pipeline->compile();
HXLINE( 248)		this->_hx_set_projID(HX_CTX, this->pipeline->getConstantLocation(HX_("proj",9d,c7,5e,4a)));
HXLINE( 249)		this->_hx_set_viewID(HX_CTX, this->pipeline->getConstantLocation(HX_("view",65,32,4f,4e)));
HXLINE( 250)		this->_hx_set_modelID(HX_CTX, this->pipeline->getConstantLocation(HX_("model",a9,23,58,0c)));
HXLINE( 253)		this->_hx_set_materialShininessID(HX_CTX, this->pipeline->getConstantLocation(HX_("material.shininess",ff,34,7f,64)));
HXLINE( 255)		this->_hx_set_diffuseMapID(HX_CTX, this->pipeline->getTextureUnit(HX_("material.diffuse",9b,be,6c,7a)));
HXLINE( 256)		this->_hx_set_specularMapID(HX_CTX, this->pipeline->getTextureUnit(HX_("material.specular",6a,8b,30,01)));
HXLINE( 259)		this->_hx_set_dirLightDirectionID(HX_CTX, this->pipeline->getConstantLocation(HX_("dirLight.direction",da,ed,e8,74)));
HXLINE( 260)		this->_hx_set_dirLightAmbientID(HX_CTX, this->pipeline->getConstantLocation(HX_("dirLight.ambient",f3,76,90,25)));
HXLINE( 261)		this->_hx_set_dirLightDiffuseID(HX_CTX, this->pipeline->getConstantLocation(HX_("dirLight.diffuse",3d,40,8e,54)));
HXLINE( 262)		this->_hx_set_dirLightSpecularID(HX_CTX, this->pipeline->getConstantLocation(HX_("dirLight.specular",88,77,60,04)));
HXLINE( 265)		this->_hx_set_spotLightPositionID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.position",e3,1d,59,77)));
HXLINE( 266)		this->_hx_set_spotLightDirectionID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.direction",c5,77,8f,36)));
HXLINE( 267)		this->_hx_set_spotLightAmbientID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.ambient",1e,20,9a,52)));
HXLINE( 268)		this->_hx_set_spotLightDiffuseID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.diffuse",68,e9,97,81)));
HXLINE( 269)		this->_hx_set_spotLightSpecularID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.specular",fd,d3,ca,3f)));
HXLINE( 270)		this->_hx_set_spotLightConstantID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.constant",9e,3e,fc,51)));
HXLINE( 271)		this->_hx_set_spotLightLinearID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.linear",9f,2c,87,6d)));
HXLINE( 272)		this->_hx_set_spotLightQuadraticID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.quadratic",5e,e0,62,08)));
HXLINE( 273)		this->_hx_set_spotLightCutOffID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.cutOff",c7,7d,06,c1)));
HXLINE( 274)		this->_hx_set_spotLightOuterCutOffID(HX_CTX, this->pipeline->getConstantLocation(HX_("spotLight.outerCutOff",ee,e0,6a,8a)));
HXLINE( 277)		this->_hx_set_diffuseMap(HX_CTX, ::kha::Assets_obj::images->container2);
HXLINE( 278)		this->_hx_set_specularMap(HX_CTX, ::kha::Assets_obj::images->specular);
HXLINE( 281)		this->_hx_set_vertexBuffer(HX_CTX,  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int((( (Float)(::pipelines::TextureCubePipeline_obj::new_vertices->length) ) / ( (Float)(3) ))),structure,0,null(),null()));
HXLINE( 286)		 ::kha::arrays::ByteArrayPrivate vbData = this->vertexBuffer->lock(null(),null());
HXLINE( 287)		{
HXLINE( 287)			int _g = 0;
HXDLIN( 287)			int _g1 = ::Std_obj::_hx_int((( (Float)((vbData->byteArrayLength >> 2)) ) / ( (Float)(structureLength) )));
HXDLIN( 287)			while((_g < _g1)){
HXLINE( 287)				_g = (_g + 1);
HXDLIN( 287)				int i = (_g - 1);
HXLINE( 289)				{
HXLINE( 289)					float v = ( (float)(::pipelines::TextureCubePipeline_obj::new_vertices->__get((i * 3))) );
HXDLIN( 289)					*((float *)&vbData->self.data[vbData->byteArrayOffset + ((i * structureLength) * 4)]) = v;
            				}
HXLINE( 290)				{
HXLINE( 290)					float v1 = ( (float)(::pipelines::TextureCubePipeline_obj::new_vertices->__get(((i * 3) + 1))) );
HXDLIN( 290)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 1) * 4)]) = v1;
            				}
HXLINE( 291)				{
HXLINE( 291)					float v2 = ( (float)(::pipelines::TextureCubePipeline_obj::new_vertices->__get(((i * 3) + 2))) );
HXDLIN( 291)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 2) * 4)]) = v2;
            				}
HXLINE( 294)				{
HXLINE( 294)					float v3 = ( (float)(::pipelines::TextureCubePipeline_obj::new_normals->__get((i * 3))) );
HXDLIN( 294)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 3) * 4)]) = v3;
            				}
HXLINE( 295)				{
HXLINE( 295)					float v4 = ( (float)(::pipelines::TextureCubePipeline_obj::new_normals->__get(((i * 3) + 1))) );
HXDLIN( 295)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 4) * 4)]) = v4;
            				}
HXLINE( 296)				{
HXLINE( 296)					float v5 = ( (float)(::pipelines::TextureCubePipeline_obj::new_normals->__get(((i * 3) + 2))) );
HXDLIN( 296)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 5) * 4)]) = v5;
            				}
HXLINE( 299)				{
HXLINE( 299)					float v6 = ( (float)(::pipelines::TextureCubePipeline_obj::new_uvs->__get((i * 2))) );
HXDLIN( 299)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 6) * 4)]) = v6;
            				}
HXLINE( 300)				{
HXLINE( 300)					float v7 = ( (float)(::pipelines::TextureCubePipeline_obj::new_uvs->__get(((i * 2) + 1))) );
HXDLIN( 300)					*((float *)&vbData->self.data[vbData->byteArrayOffset + (((i * structureLength) + 7) * 4)]) = v7;
            				}
            			}
            		}
HXLINE( 302)		this->vertexBuffer->unlock(null());
HXLINE( 305)		::Array< int > indices = ::Array_obj< int >::__new(0);
HXLINE( 306)		{
HXLINE( 306)			int _g2 = 0;
HXDLIN( 306)			int _g3 = ::Std_obj::_hx_int((( (Float)(::pipelines::TextureCubePipeline_obj::new_vertices->length) ) / ( (Float)(3) )));
HXDLIN( 306)			while((_g2 < _g3)){
HXLINE( 306)				_g2 = (_g2 + 1);
HXDLIN( 306)				int i1 = (_g2 - 1);
HXLINE( 307)				indices->push(i1);
            			}
            		}
HXLINE( 311)		this->_hx_set_indexBuffer(HX_CTX,  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,0,null()));
HXLINE( 316)		 ::kha::arrays::ByteArrayPrivate iData = this->indexBuffer->lock(null(),null());
HXLINE( 317)		{
HXLINE( 317)			int _g4 = 0;
HXDLIN( 317)			int _g5 = (iData->byteArrayLength >> 2);
HXDLIN( 317)			while((_g4 < _g5)){
HXLINE( 317)				_g4 = (_g4 + 1);
HXDLIN( 317)				int i2 = (_g4 - 1);
HXLINE( 318)				{
HXLINE( 318)					*((uint32_t *)&iData->self.data[iData->byteArrayOffset + (i2 * 4)]) = indices->__get(i2);
HXDLIN( 318)					*(uint32_t *)&iData->self.data[iData->byteArrayOffset + (i2 * 4)];
            				}
            			}
            		}
HXLINE( 320)		this->indexBuffer->unlock(null());
            	}

Dynamic TextureCubePipeline_obj::__CreateEmpty() { return new TextureCubePipeline_obj; }

void *TextureCubePipeline_obj::_hx_vtable = 0;

Dynamic TextureCubePipeline_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TextureCubePipeline_obj > _hx_result = new TextureCubePipeline_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TextureCubePipeline_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x280dafe1;
}

void TextureCubePipeline_obj::render(::Dynamic g, ::Dynamic params){
            	HX_STACKFRAME(&_hx_pos_bb55e2d660c8a8e3_323_render)
HXLINE( 325)		::kha::graphics4::Graphics_obj::setPipeline(g,this->pipeline);
HXLINE( 328)		::kha::graphics4::Graphics_obj::setVertexBuffer(g,this->vertexBuffer);
HXLINE( 329)		::kha::graphics4::Graphics_obj::setIndexBuffer(g,this->indexBuffer);
HXLINE( 332)		::kha::graphics4::Graphics_obj::setMatrix(g,this->projID, ::Dynamic(params->__Field(HX_("proj",9d,c7,5e,4a),::hx::paccDynamic)));
HXLINE( 333)		::kha::graphics4::Graphics_obj::setMatrix(g,this->modelID, ::Dynamic(params->__Field(HX_("model",a9,23,58,0c),::hx::paccDynamic)));
HXLINE( 334)		::kha::graphics4::Graphics_obj::setMatrix(g,this->viewID, ::Dynamic(params->__Field(HX_("view",65,32,4f,4e),::hx::paccDynamic)));
HXLINE( 337)		::kha::graphics4::Graphics_obj::setFloat(g,this->materialShininessID, ::Dynamic( ::Dynamic(params->__Field(HX_("material",a7,5c,a5,f0),::hx::paccDynamic))->__Field(HX_("shininess",86,57,95,c6),::hx::paccDynamic)));
HXLINE( 341)		{
HXLINE( 341)			int _g = 0;
HXDLIN( 341)			while((_g < 4)){
HXLINE( 341)				_g = (_g + 1);
HXDLIN( 341)				int i = (_g - 1);
HXLINE( 342)				{
HXLINE( 342)					int _g1 = 0;
HXDLIN( 342)					::Array< ::String > _g2 = ::Array_obj< ::String >::fromData( _hx_array_data_cd1700b5_8,7);
HXDLIN( 342)					while((_g1 < _g2->length)){
HXLINE( 342)						::String prop = _g2->__get(_g1);
HXDLIN( 342)						_g1 = (_g1 + 1);
HXLINE( 343)						::String _hx_switch_0 = prop;
            						if (  (_hx_switch_0==HX_("ambient",18,98,81,09)) ){
HXLINE( 345)							::Dynamic _hx_tmp = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 345)							::kha::graphics4::Graphics_obj::setFloat3(g,_hx_tmp, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(2));
HXDLIN( 345)							goto _hx_goto_6;
            						}
            						if (  (_hx_switch_0==HX_("constant",64,c1,9d,a5)) ){
HXLINE( 357)							::Dynamic _hx_tmp1 = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 357)							::kha::graphics4::Graphics_obj::setFloat(g,_hx_tmp1, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("constant",64,c1,9d,a5),::hx::paccDynamic)));
HXDLIN( 357)							goto _hx_goto_6;
            						}
            						if (  (_hx_switch_0==HX_("diffuse",62,61,7f,38)) ){
HXLINE( 354)							::Dynamic _hx_tmp2 = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 354)							::kha::graphics4::Graphics_obj::setFloat3(g,_hx_tmp2, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(2));
HXDLIN( 354)							goto _hx_goto_6;
            						}
            						if (  (_hx_switch_0==HX_("linear",e5,51,a0,ec)) ){
HXLINE( 359)							::Dynamic _hx_tmp3 = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 359)							::kha::graphics4::Graphics_obj::setFloat(g,_hx_tmp3, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("linear",e5,51,a0,ec),::hx::paccDynamic)));
HXDLIN( 359)							goto _hx_goto_6;
            						}
            						if (  (_hx_switch_0==HX_("position",a9,a0,fa,ca)) ){
HXLINE( 348)							::Dynamic _hx_tmp4 = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 348)							::kha::graphics4::Graphics_obj::setFloat3(g,_hx_tmp4, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("position",a9,a0,fa,ca),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("position",a9,a0,fa,ca),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("position",a9,a0,fa,ca),::hx::paccDynamic))->__GetItem(2));
HXDLIN( 348)							goto _hx_goto_6;
            						}
            						if (  (_hx_switch_0==HX_("quadratic",d8,ca,13,e2)) ){
HXLINE( 361)							::Dynamic _hx_tmp5 = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 361)							::kha::graphics4::Graphics_obj::setFloat(g,_hx_tmp5, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("quadratic",d8,ca,13,e2),::hx::paccDynamic)));
HXDLIN( 361)							goto _hx_goto_6;
            						}
            						if (  (_hx_switch_0==HX_("specular",c3,56,6c,93)) ){
HXLINE( 351)							::Dynamic _hx_tmp6 = this->pipeline->getConstantLocation((((HX_("pointLights[",6e,f4,86,f8) + i) + HX_("].",31,51,00,00)) + prop));
HXDLIN( 351)							::kha::graphics4::Graphics_obj::setFloat3(g,_hx_tmp6, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("pointLights",4d,6f,9a,ce),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(2));
HXDLIN( 351)							goto _hx_goto_6;
            						}
            						_hx_goto_6:;
            					}
            				}
            			}
            		}
HXLINE( 367)		::kha::graphics4::Graphics_obj::setFloat3(g,this->dirLightDirectionID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("direction",3f,62,40,10),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("direction",3f,62,40,10),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("direction",3f,62,40,10),::hx::paccDynamic))->__GetItem(2));
HXLINE( 368)		::kha::graphics4::Graphics_obj::setFloat3(g,this->dirLightAmbientID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(2));
HXLINE( 369)		::kha::graphics4::Graphics_obj::setFloat3(g,this->dirLightDiffuseID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(2));
HXLINE( 370)		::kha::graphics4::Graphics_obj::setFloat3(g,this->dirLightSpecularID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("dirLight",49,6c,db,02),::hx::paccDynamic))->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(2));
HXLINE( 373)		::kha::graphics4::Graphics_obj::setFloat3(g,this->spotLightPositionID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("position",a9,a0,fa,ca),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("position",a9,a0,fa,ca),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("position",a9,a0,fa,ca),::hx::paccDynamic))->__GetItem(2));
HXLINE( 374)		::kha::graphics4::Graphics_obj::setFloat3(g,this->spotLightDirectionID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("direction",3f,62,40,10),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("direction",3f,62,40,10),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("direction",3f,62,40,10),::hx::paccDynamic))->__GetItem(2));
HXLINE( 375)		::kha::graphics4::Graphics_obj::setFloat3(g,this->spotLightAmbientID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("ambient",18,98,81,09),::hx::paccDynamic))->__GetItem(2));
HXLINE( 376)		::kha::graphics4::Graphics_obj::setFloat3(g,this->spotLightDiffuseID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("diffuse",62,61,7f,38),::hx::paccDynamic))->__GetItem(2));
HXLINE( 377)		::kha::graphics4::Graphics_obj::setFloat3(g,this->spotLightSpecularID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(0), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(1), ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("specular",c3,56,6c,93),::hx::paccDynamic))->__GetItem(2));
HXLINE( 379)		::kha::graphics4::Graphics_obj::setFloat(g,this->spotLightConstantID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("constant",64,c1,9d,a5),::hx::paccDynamic)));
HXLINE( 380)		::kha::graphics4::Graphics_obj::setFloat(g,this->spotLightLinearID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("linear",e5,51,a0,ec),::hx::paccDynamic)));
HXLINE( 381)		::kha::graphics4::Graphics_obj::setFloat(g,this->spotLightQuadraticID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("quadratic",d8,ca,13,e2),::hx::paccDynamic)));
HXLINE( 383)		::kha::graphics4::Graphics_obj::setFloat(g,this->spotLightCutOffID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("cutOff",0d,a3,1f,40),::hx::paccDynamic)));
HXLINE( 384)		::kha::graphics4::Graphics_obj::setFloat(g,this->spotLightOuterCutOffID, ::Dynamic( ::Dynamic( ::Dynamic(params->__Field(HX_("light",d6,90,fc,74),::hx::paccDynamic))->__Field(HX_("spotLight",74,72,e2,39),::hx::paccDynamic))->__Field(HX_("outerCutOff",e8,dd,06,e2),::hx::paccDynamic)));
HXLINE( 386)		::kha::graphics4::Graphics_obj::setTexture(g,this->diffuseMapID,this->diffuseMap);
HXLINE( 387)		::kha::graphics4::Graphics_obj::setTextureParameters(g,this->diffuseMapID,2,2,1,1,0);
HXLINE( 390)		::kha::graphics4::Graphics_obj::setTexture(g,this->specularMapID,this->specularMap);
HXLINE( 391)		::kha::graphics4::Graphics_obj::setTextureParameters(g,this->specularMapID,2,2,1,1,0);
HXLINE( 395)		::kha::graphics4::Graphics_obj::drawIndexedVertices(g,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(TextureCubePipeline_obj,render,(void))

::Array< Float > TextureCubePipeline_obj::new_uvs;

::Array< Float > TextureCubePipeline_obj::new_normals;

::Array< Float > TextureCubePipeline_obj::new_vertices;


::hx::ObjectPtr< TextureCubePipeline_obj > TextureCubePipeline_obj::__new() {
	::hx::ObjectPtr< TextureCubePipeline_obj > __this = new TextureCubePipeline_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TextureCubePipeline_obj > TextureCubePipeline_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TextureCubePipeline_obj *__this = (TextureCubePipeline_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TextureCubePipeline_obj), true, "pipelines.TextureCubePipeline"));
	*(void **)__this = TextureCubePipeline_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TextureCubePipeline_obj::TextureCubePipeline_obj()
{
}

void TextureCubePipeline_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TextureCubePipeline);
	HX_MARK_MEMBER_NAME(pipeline,"pipeline");
	HX_MARK_MEMBER_NAME(mvpID,"mvpID");
	HX_MARK_MEMBER_NAME(projID,"projID");
	HX_MARK_MEMBER_NAME(viewID,"viewID");
	HX_MARK_MEMBER_NAME(modelID,"modelID");
	HX_MARK_MEMBER_NAME(materialShininessID,"materialShininessID");
	HX_MARK_MEMBER_NAME(diffuseMapID,"diffuseMapID");
	HX_MARK_MEMBER_NAME(diffuseMap,"diffuseMap");
	HX_MARK_MEMBER_NAME(specularMapID,"specularMapID");
	HX_MARK_MEMBER_NAME(specularMap,"specularMap");
	HX_MARK_MEMBER_NAME(dirLightDirectionID,"dirLightDirectionID");
	HX_MARK_MEMBER_NAME(dirLightAmbientID,"dirLightAmbientID");
	HX_MARK_MEMBER_NAME(dirLightDiffuseID,"dirLightDiffuseID");
	HX_MARK_MEMBER_NAME(dirLightSpecularID,"dirLightSpecularID");
	HX_MARK_MEMBER_NAME(spotLightPositionID,"spotLightPositionID");
	HX_MARK_MEMBER_NAME(spotLightDirectionID,"spotLightDirectionID");
	HX_MARK_MEMBER_NAME(spotLightAmbientID,"spotLightAmbientID");
	HX_MARK_MEMBER_NAME(spotLightDiffuseID,"spotLightDiffuseID");
	HX_MARK_MEMBER_NAME(spotLightSpecularID,"spotLightSpecularID");
	HX_MARK_MEMBER_NAME(spotLightConstantID,"spotLightConstantID");
	HX_MARK_MEMBER_NAME(spotLightLinearID,"spotLightLinearID");
	HX_MARK_MEMBER_NAME(spotLightQuadraticID,"spotLightQuadraticID");
	HX_MARK_MEMBER_NAME(spotLightCutOffID,"spotLightCutOffID");
	HX_MARK_MEMBER_NAME(spotLightOuterCutOffID,"spotLightOuterCutOffID");
	HX_MARK_MEMBER_NAME(vertexBuffer,"vertexBuffer");
	HX_MARK_MEMBER_NAME(indexBuffer,"indexBuffer");
	HX_MARK_END_CLASS();
}

void TextureCubePipeline_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pipeline,"pipeline");
	HX_VISIT_MEMBER_NAME(mvpID,"mvpID");
	HX_VISIT_MEMBER_NAME(projID,"projID");
	HX_VISIT_MEMBER_NAME(viewID,"viewID");
	HX_VISIT_MEMBER_NAME(modelID,"modelID");
	HX_VISIT_MEMBER_NAME(materialShininessID,"materialShininessID");
	HX_VISIT_MEMBER_NAME(diffuseMapID,"diffuseMapID");
	HX_VISIT_MEMBER_NAME(diffuseMap,"diffuseMap");
	HX_VISIT_MEMBER_NAME(specularMapID,"specularMapID");
	HX_VISIT_MEMBER_NAME(specularMap,"specularMap");
	HX_VISIT_MEMBER_NAME(dirLightDirectionID,"dirLightDirectionID");
	HX_VISIT_MEMBER_NAME(dirLightAmbientID,"dirLightAmbientID");
	HX_VISIT_MEMBER_NAME(dirLightDiffuseID,"dirLightDiffuseID");
	HX_VISIT_MEMBER_NAME(dirLightSpecularID,"dirLightSpecularID");
	HX_VISIT_MEMBER_NAME(spotLightPositionID,"spotLightPositionID");
	HX_VISIT_MEMBER_NAME(spotLightDirectionID,"spotLightDirectionID");
	HX_VISIT_MEMBER_NAME(spotLightAmbientID,"spotLightAmbientID");
	HX_VISIT_MEMBER_NAME(spotLightDiffuseID,"spotLightDiffuseID");
	HX_VISIT_MEMBER_NAME(spotLightSpecularID,"spotLightSpecularID");
	HX_VISIT_MEMBER_NAME(spotLightConstantID,"spotLightConstantID");
	HX_VISIT_MEMBER_NAME(spotLightLinearID,"spotLightLinearID");
	HX_VISIT_MEMBER_NAME(spotLightQuadraticID,"spotLightQuadraticID");
	HX_VISIT_MEMBER_NAME(spotLightCutOffID,"spotLightCutOffID");
	HX_VISIT_MEMBER_NAME(spotLightOuterCutOffID,"spotLightOuterCutOffID");
	HX_VISIT_MEMBER_NAME(vertexBuffer,"vertexBuffer");
	HX_VISIT_MEMBER_NAME(indexBuffer,"indexBuffer");
}

::hx::Val TextureCubePipeline_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"mvpID") ) { return ::hx::Val( mvpID ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"projID") ) { return ::hx::Val( projID ); }
		if (HX_FIELD_EQ(inName,"viewID") ) { return ::hx::Val( viewID ); }
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"modelID") ) { return ::hx::Val( modelID ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"pipeline") ) { return ::hx::Val( pipeline ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"diffuseMap") ) { return ::hx::Val( diffuseMap ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"specularMap") ) { return ::hx::Val( specularMap ); }
		if (HX_FIELD_EQ(inName,"indexBuffer") ) { return ::hx::Val( indexBuffer ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"diffuseMapID") ) { return ::hx::Val( diffuseMapID ); }
		if (HX_FIELD_EQ(inName,"vertexBuffer") ) { return ::hx::Val( vertexBuffer ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"specularMapID") ) { return ::hx::Val( specularMapID ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"dirLightAmbientID") ) { return ::hx::Val( dirLightAmbientID ); }
		if (HX_FIELD_EQ(inName,"dirLightDiffuseID") ) { return ::hx::Val( dirLightDiffuseID ); }
		if (HX_FIELD_EQ(inName,"spotLightLinearID") ) { return ::hx::Val( spotLightLinearID ); }
		if (HX_FIELD_EQ(inName,"spotLightCutOffID") ) { return ::hx::Val( spotLightCutOffID ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"dirLightSpecularID") ) { return ::hx::Val( dirLightSpecularID ); }
		if (HX_FIELD_EQ(inName,"spotLightAmbientID") ) { return ::hx::Val( spotLightAmbientID ); }
		if (HX_FIELD_EQ(inName,"spotLightDiffuseID") ) { return ::hx::Val( spotLightDiffuseID ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"materialShininessID") ) { return ::hx::Val( materialShininessID ); }
		if (HX_FIELD_EQ(inName,"dirLightDirectionID") ) { return ::hx::Val( dirLightDirectionID ); }
		if (HX_FIELD_EQ(inName,"spotLightPositionID") ) { return ::hx::Val( spotLightPositionID ); }
		if (HX_FIELD_EQ(inName,"spotLightSpecularID") ) { return ::hx::Val( spotLightSpecularID ); }
		if (HX_FIELD_EQ(inName,"spotLightConstantID") ) { return ::hx::Val( spotLightConstantID ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"spotLightDirectionID") ) { return ::hx::Val( spotLightDirectionID ); }
		if (HX_FIELD_EQ(inName,"spotLightQuadraticID") ) { return ::hx::Val( spotLightQuadraticID ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"spotLightOuterCutOffID") ) { return ::hx::Val( spotLightOuterCutOffID ); }
	}
	return super::__Field(inName,inCallProp);
}

bool TextureCubePipeline_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"new_uvs") ) { outValue = ( new_uvs ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"new_normals") ) { outValue = ( new_normals ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"new_vertices") ) { outValue = ( new_vertices ); return true; }
	}
	return false;
}

::hx::Val TextureCubePipeline_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"mvpID") ) { _hx_set_mvpID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"projID") ) { _hx_set_projID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"viewID") ) { _hx_set_viewID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"modelID") ) { _hx_set_modelID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"pipeline") ) { _hx_set_pipeline(HX_CTX_GET,inValue.Cast<  ::kha::graphics4::PipelineState >()); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"diffuseMap") ) { _hx_set_diffuseMap(HX_CTX_GET,inValue.Cast<  ::kha::Image >()); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"specularMap") ) { _hx_set_specularMap(HX_CTX_GET,inValue.Cast<  ::kha::Image >()); return inValue; }
		if (HX_FIELD_EQ(inName,"indexBuffer") ) { _hx_set_indexBuffer(HX_CTX_GET,inValue.Cast<  ::kha::graphics4::IndexBuffer >()); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"diffuseMapID") ) { _hx_set_diffuseMapID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"vertexBuffer") ) { _hx_set_vertexBuffer(HX_CTX_GET,inValue.Cast<  ::kha::graphics4::VertexBuffer >()); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"specularMapID") ) { _hx_set_specularMapID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"dirLightAmbientID") ) { _hx_set_dirLightAmbientID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"dirLightDiffuseID") ) { _hx_set_dirLightDiffuseID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightLinearID") ) { _hx_set_spotLightLinearID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightCutOffID") ) { _hx_set_spotLightCutOffID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"dirLightSpecularID") ) { _hx_set_dirLightSpecularID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightAmbientID") ) { _hx_set_spotLightAmbientID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightDiffuseID") ) { _hx_set_spotLightDiffuseID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"materialShininessID") ) { _hx_set_materialShininessID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"dirLightDirectionID") ) { _hx_set_dirLightDirectionID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightPositionID") ) { _hx_set_spotLightPositionID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightSpecularID") ) { _hx_set_spotLightSpecularID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightConstantID") ) { _hx_set_spotLightConstantID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"spotLightDirectionID") ) { _hx_set_spotLightDirectionID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"spotLightQuadraticID") ) { _hx_set_spotLightQuadraticID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"spotLightOuterCutOffID") ) { _hx_set_spotLightOuterCutOffID(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool TextureCubePipeline_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"new_uvs") ) { new_uvs=ioValue.Cast< ::Array< Float > >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"new_normals") ) { new_normals=ioValue.Cast< ::Array< Float > >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"new_vertices") ) { new_vertices=ioValue.Cast< ::Array< Float > >(); return true; }
	}
	return false;
}

void TextureCubePipeline_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pipeline",22,bb,83,4b));
	outFields->push(HX_("mvpID",82,a4,01,11));
	outFields->push(HX_("projID",b8,e8,55,b5));
	outFields->push(HX_("viewID",80,95,4c,e6));
	outFields->push(HX_("modelID",c4,5f,67,ed));
	outFields->push(HX_("materialShininessID",7a,43,32,e3));
	outFields->push(HX_("diffuseMapID",b5,f4,67,fe));
	outFields->push(HX_("diffuseMap",5a,ea,94,3f));
	outFields->push(HX_("specularMapID",b4,df,00,c4));
	outFields->push(HX_("specularMap",99,c7,8c,b1));
	outFields->push(HX_("dirLightDirectionID",11,de,d9,55));
	outFields->push(HX_("dirLightAmbientID",6a,30,90,ca));
	outFields->push(HX_("dirLightDiffuseID",34,60,8a,0b));
	outFields->push(HX_("dirLightSpecularID",07,13,3a,56));
	outFields->push(HX_("spotLightPositionID",58,ac,01,07));
	outFields->push(HX_("spotLightDirectionID",c6,01,ec,05));
	outFields->push(HX_("spotLightAmbientID",df,8c,fa,05));
	outFields->push(HX_("spotLightDiffuseID",a9,bc,f4,46));
	outFields->push(HX_("spotLightSpecularID",f2,9c,e0,17));
	outFields->push(HX_("spotLightConstantID",d3,b1,3a,29));
	outFields->push(HX_("spotLightLinearID",94,57,7e,6e));
	outFields->push(HX_("spotLightQuadraticID",9f,82,dd,81));
	outFields->push(HX_("spotLightCutOffID",bc,42,52,1d));
	outFields->push(HX_("spotLightOuterCutOffID",af,cc,60,06));
	outFields->push(HX_("vertexBuffer",84,af,a9,70));
	outFields->push(HX_("indexBuffer",b2,65,a6,f5));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TextureCubePipeline_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::kha::graphics4::PipelineState */ ,(int)offsetof(TextureCubePipeline_obj,pipeline),HX_("pipeline",22,bb,83,4b)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,mvpID),HX_("mvpID",82,a4,01,11)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,projID),HX_("projID",b8,e8,55,b5)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,viewID),HX_("viewID",80,95,4c,e6)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,modelID),HX_("modelID",c4,5f,67,ed)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,materialShininessID),HX_("materialShininessID",7a,43,32,e3)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,diffuseMapID),HX_("diffuseMapID",b5,f4,67,fe)},
	{::hx::fsObject /*  ::kha::Image */ ,(int)offsetof(TextureCubePipeline_obj,diffuseMap),HX_("diffuseMap",5a,ea,94,3f)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,specularMapID),HX_("specularMapID",b4,df,00,c4)},
	{::hx::fsObject /*  ::kha::Image */ ,(int)offsetof(TextureCubePipeline_obj,specularMap),HX_("specularMap",99,c7,8c,b1)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,dirLightDirectionID),HX_("dirLightDirectionID",11,de,d9,55)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,dirLightAmbientID),HX_("dirLightAmbientID",6a,30,90,ca)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,dirLightDiffuseID),HX_("dirLightDiffuseID",34,60,8a,0b)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,dirLightSpecularID),HX_("dirLightSpecularID",07,13,3a,56)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightPositionID),HX_("spotLightPositionID",58,ac,01,07)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightDirectionID),HX_("spotLightDirectionID",c6,01,ec,05)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightAmbientID),HX_("spotLightAmbientID",df,8c,fa,05)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightDiffuseID),HX_("spotLightDiffuseID",a9,bc,f4,46)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightSpecularID),HX_("spotLightSpecularID",f2,9c,e0,17)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightConstantID),HX_("spotLightConstantID",d3,b1,3a,29)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightLinearID),HX_("spotLightLinearID",94,57,7e,6e)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightQuadraticID),HX_("spotLightQuadraticID",9f,82,dd,81)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightCutOffID),HX_("spotLightCutOffID",bc,42,52,1d)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(TextureCubePipeline_obj,spotLightOuterCutOffID),HX_("spotLightOuterCutOffID",af,cc,60,06)},
	{::hx::fsObject /*  ::kha::graphics4::VertexBuffer */ ,(int)offsetof(TextureCubePipeline_obj,vertexBuffer),HX_("vertexBuffer",84,af,a9,70)},
	{::hx::fsObject /*  ::kha::graphics4::IndexBuffer */ ,(int)offsetof(TextureCubePipeline_obj,indexBuffer),HX_("indexBuffer",b2,65,a6,f5)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo TextureCubePipeline_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< Float > */ ,(void *) &TextureCubePipeline_obj::new_uvs,HX_("new_uvs",53,f4,17,04)},
	{::hx::fsObject /* ::Array< Float > */ ,(void *) &TextureCubePipeline_obj::new_normals,HX_("new_normals",4d,fa,bd,b0)},
	{::hx::fsObject /* ::Array< Float > */ ,(void *) &TextureCubePipeline_obj::new_vertices,HX_("new_vertices",f8,da,4a,2c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String TextureCubePipeline_obj_sMemberFields[] = {
	HX_("pipeline",22,bb,83,4b),
	HX_("mvpID",82,a4,01,11),
	HX_("projID",b8,e8,55,b5),
	HX_("viewID",80,95,4c,e6),
	HX_("modelID",c4,5f,67,ed),
	HX_("materialShininessID",7a,43,32,e3),
	HX_("diffuseMapID",b5,f4,67,fe),
	HX_("diffuseMap",5a,ea,94,3f),
	HX_("specularMapID",b4,df,00,c4),
	HX_("specularMap",99,c7,8c,b1),
	HX_("dirLightDirectionID",11,de,d9,55),
	HX_("dirLightAmbientID",6a,30,90,ca),
	HX_("dirLightDiffuseID",34,60,8a,0b),
	HX_("dirLightSpecularID",07,13,3a,56),
	HX_("spotLightPositionID",58,ac,01,07),
	HX_("spotLightDirectionID",c6,01,ec,05),
	HX_("spotLightAmbientID",df,8c,fa,05),
	HX_("spotLightDiffuseID",a9,bc,f4,46),
	HX_("spotLightSpecularID",f2,9c,e0,17),
	HX_("spotLightConstantID",d3,b1,3a,29),
	HX_("spotLightLinearID",94,57,7e,6e),
	HX_("spotLightQuadraticID",9f,82,dd,81),
	HX_("spotLightCutOffID",bc,42,52,1d),
	HX_("spotLightOuterCutOffID",af,cc,60,06),
	HX_("vertexBuffer",84,af,a9,70),
	HX_("indexBuffer",b2,65,a6,f5),
	HX_("render",56,6b,29,05),
	::String(null()) };

static void TextureCubePipeline_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TextureCubePipeline_obj::new_uvs,"new_uvs");
	HX_MARK_MEMBER_NAME(TextureCubePipeline_obj::new_normals,"new_normals");
	HX_MARK_MEMBER_NAME(TextureCubePipeline_obj::new_vertices,"new_vertices");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TextureCubePipeline_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TextureCubePipeline_obj::new_uvs,"new_uvs");
	HX_VISIT_MEMBER_NAME(TextureCubePipeline_obj::new_normals,"new_normals");
	HX_VISIT_MEMBER_NAME(TextureCubePipeline_obj::new_vertices,"new_vertices");
};

#endif

::hx::Class TextureCubePipeline_obj::__mClass;

static ::String TextureCubePipeline_obj_sStaticFields[] = {
	HX_("new_uvs",53,f4,17,04),
	HX_("new_normals",4d,fa,bd,b0),
	HX_("new_vertices",f8,da,4a,2c),
	::String(null())
};

void TextureCubePipeline_obj::__register()
{
	TextureCubePipeline_obj _hx_dummy;
	TextureCubePipeline_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pipelines.TextureCubePipeline",b5,00,17,cd);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TextureCubePipeline_obj::__GetStatic;
	__mClass->mSetStaticField = &TextureCubePipeline_obj::__SetStatic;
	__mClass->mMarkFunc = TextureCubePipeline_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TextureCubePipeline_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TextureCubePipeline_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TextureCubePipeline_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TextureCubePipeline_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextureCubePipeline_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextureCubePipeline_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TextureCubePipeline_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_bb55e2d660c8a8e3_189_boot)
HXDLIN( 189)		new_uvs = ::Array_obj< Float >::fromData( _hx_array_data_cd1700b5_10,72);
            	}
{
            	HX_STACKFRAME(&_hx_pos_bb55e2d660c8a8e3_150_boot)
HXDLIN( 150)		new_normals = ::Array_obj< Float >::fromData( _hx_array_data_cd1700b5_12,108);
            	}
{
            	HX_STACKFRAME(&_hx_pos_bb55e2d660c8a8e3_106_boot)
HXDLIN( 106)		new_vertices = ::Array_obj< Float >::fromData( _hx_array_data_cd1700b5_14,108);
            	}
}

} // end namespace pipelines
